---
import { type CollectionEntry, getCollection } from "astro:content";
import MainLayout from "./../../layouts/MainLayout.astro";
import { langParamRegex } from "@i18n/utils";
import { KNOWN_LANGUAGE_CODES, defaultLang } from "@i18n/locales";
import { getEntry } from "astro:content";

export const getStaticPaths = async () => {
  const docs = (await getCollection("docs")).map((doc) => ({
    ...doc,
    slugUpdated: doc.slug?.replace(langParamRegex, ""),
  }));

  return KNOWN_LANGUAGE_CODES.flatMap((langKey) => {
    const docsByLang = docs.filter((doc) => doc.slug.startsWith(`${langKey}/`));

    return docsByLang.map((doc) => ({
      params: {
        lang: langKey,
        slug: doc.slugUpdated,
      },
      props: doc,
    }));
  });
};

type Props = CollectionEntry<"docs">;

const { lang, slug } = Astro.params;
const post = await getEntry("docs", `${lang}/${slug}`);

const path = Astro.url.pathname;
if (!post && langParamRegex.test(path) && !path.includes(`/${defaultLang}`)) {
  const updatedPath = path.replace(langParamRegex, `/${defaultLang}/`);

  return Astro.redirect(updatedPath, 302);
}

if (!post) {
  return Astro.redirect("/404");
}

const { Content, headings } = await post!.render();
---

<MainLayout headings={headings} {...post!.data}>
  <Content />
</MainLayout>
