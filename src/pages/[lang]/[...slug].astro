---
import { differenceBy } from "lodash-es";
import { type CollectionEntry, getCollection } from "astro:content";
import MainLayout from "./../../layouts/MainLayout.astro";
import { KNOWN_LANGUAGE_CODES, langParamRegex } from "@i18n/locales";
import { SITE } from "src/consts";

export async function getStaticPaths() {
  // we need to add updated slug for the further array compare by this value
  const docs = (await getCollection("docs")).map((doc) => ({
    ...doc,
    slugUpdated: doc.slug?.replace(langParamRegex, ""),
  }));
  // if some docs don`t have content in this language we are showing EN page
  const defaultLangFallback = docs.filter((doc) =>
    doc.slug.startsWith(`${SITE.defaultLanguageKey}/`),
  );

  return KNOWN_LANGUAGE_CODES.flatMap((langKey) => {
    const docsByLang = docs.filter((doc) => doc.slug.startsWith(`${langKey}/`));

    const differenceWithOrigin = differenceBy(
      defaultLangFallback,
      docsByLang,
      "slugUpdated",
    );
    // if we have differences between arrays we populating pages from EN array
    const usedArray = differenceWithOrigin.length
      ? [...docsByLang, ...differenceWithOrigin]
      : docsByLang;

    return usedArray.map((doc) => ({
      params: {
        lang: langKey,
        slug: doc.slugUpdated,
      },
      props: doc,
    }));
  });
}

type Props = CollectionEntry<"docs">;

const post = Astro.props;

const { Content, headings } = await post.render();
---

<MainLayout headings={headings} {...post.data}>
  <Content />
</MainLayout>
