---
title: Send event information
description: Use these methods to send event information to Adjust.
slug: en/sdk/cocos2dx/features/events
versions:
   - label: v5
     value: v5
     default: true
   - label: v4
     value: v4
redirects:
   v4: /en/sdk/cocos2dx/v4/features/events
---

You can use the Adjust SDK to send event information to Adjust's servers in response to actions taken by your users. Adjust records these events and surfaces them in your [Datascape reports](https://help.adjust.com/en/article/datascape), [server callbacks](https://help.adjust.com/en/article/server-callbacks), and [cloud storage uploads](https://help.adjust.com/en/article/cloud-storage-uploads).

For more information on configuring events in Adjust, see the [Add events guide](https://help.adjust.com/en/article/add-events) in the Help Center.

## How it works {% #how-it-works %}

Events are represented by `AdjustEvent2dx` instances. The `AdjustEvent2dx` class contains properties which you can populate with event information to send to Adjust. The `AdjustEvent2dx` class MUST be instantiated using an Adjust event token. You can find your event token in AppView by following the steps in the [Add events guide](https://help.adjust.com/en/article/add-events#copy-event-token). You can set each property to create a complete representation of your event.

Once you've set all the properties you need to set, use the `Adjust2dx::trackEvent()` method to send the `AdjustEvent2dx` instance to Adjust. When Adjust receives this object, it records the event information for you to report on.

## Reference {% #reference %}

The `AdjustEvent2dx` class is used to hold information about an event. Each event is represented by a unique `AdjustEvent2dx` instance.

### Constructor {% #constructor %}

Instantiate an `AdjustEvent2dx` object by passing your event token as an argument.

| Argument                                                                                                                          | Type                                                                                                                              | Description                                                                                                                       |
| --------------------------------------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------- |
| `eventToken`                                                                                                                      | `std::string`                                                                                                                          | Your Adjust event token. See [Add events](https://help.adjust.com/en/article/add-events#manage-your-events) for more information. |

```cpp
AdjustEvent2dx adjustEvent = AdjustEvent2dx("{% $variables.event.token %}");
Adjust2dx::trackEvent(adjustEvent);
```

### Set event revenue {% #set-event-revenue %}

Set the revenue amount and currency code of any revenue associated with the event by calling the `setRevenue()` method.

| Argument                                                                        | Type                                                                            | Description                                                                     |
| ------------------------------------------------------------------------------- | ------------------------------------------------------------------------------- | ------------------------------------------------------------------------------- |
| `revenue`                                                                       | `double`                                                                        | The amount of revenue generated by the event.                                   |
| `currency`                                                                      | `std::string`                                                                        | The [ISO 4217 code](https://www.iban.com/currency-codes) of the event currency. |

```cpp
AdjustEvent2dx adjustEvent = AdjustEvent2dx("{% $variables.event.token %}");
adjustEvent.setRevenue({% $variables.event.revenue.amount %}, "{% $variables.event.revenue.currency %}");
Adjust2dx::trackEvent(adjustEvent);
```

### Add callback parameters {% #add-callback-parameters %}

Add callback parameters by passing `std::string` key-value pairs to the `addCallbackParameter` method. When Adjust receives your `AdjustEvent2dx` instance, all callback parameters are sent to your callback URL.

| Argument                         | Type                             | Description                      |
| -------------------------------- | -------------------------------- | -------------------------------- |
| `key`                            | `std::string`                         | The name (key) of the parameter. |
| `value`                          | `std::string`                         | The value of the parameter.      |

```cpp
AdjustEvent2dx adjustEvent = AdjustEvent2dx("{% $variables.event.token %}");
adjustEvent.addCallbackParameter({% $variables.event.callbackParams[0] %});
adjustEvent.addCallbackParameter({% $variables.event.callbackParams[1] %});
Adjust2dx::trackEvent(adjustEvent);
```

### Add partner parameters {% #add-partner-parameters %}

Add callback parameters by passing `string` key-value pairs to the `addPartnerParameter()` method. When Adjust receives your `AdjustEvent2dx` instance, all partner parameters are sent to any external partners you've configured.

| Argument                         | Type                             | Description                      |
| -------------------------------- | -------------------------------- | -------------------------------- |
| `key`                            | `std::string`                         | The name (key) of the parameter. |
| `value`                          | `std::string`                         | The value of the parameter.      |

```cpp
AdjustEvent2dx adjustEvent = AdjustEvent2dx("{% $variables.event.token %}");
adjustEvent.addPartnerParameter({% $variables.event.partnerParams[0] %});
adjustEvent.addPartnerParameter({% $variables.event.partnerParams[1] %});
Adjust2dx::trackEvent(adjustEvent)
```

### Set deduplication ID {% #set-deduplication-id %}

Sets a unique identifier for the `AdjustEvent2dx` instance to deduplicate revenue events by calling the `setDeduplicationId()` method. The SDK stores the last ten identifiers and skips revenue events with duplicate transaction IDs.

| Argument                 | Type                     | Description              |
| ------------------------ | ------------------------ | ------------------------ |
| `deduplicationId`        | `std::string`                 | A unique transaction ID. |

```cpp
AdjustEvent2dx adjustEvent = AdjustEvent2dx("{% $variables.event.token %}");
adjustEvent.setDeduplicationId("{% $variables.event.deduplicationId %}");
Adjust2dx::trackEvent(adjustEvent);
```

### Set a callback ID {% #set-callback-id %}

Sets a unique identifier for Adjust's servers to report on in event callback by calling the `setCallbackId` method.

| Argument              | Type                  | Description           |
| --------------------- | --------------------- | --------------------- |
| `callbackId`          | `std::string`              | A unique callback ID. |

```cpp
AdjustEvent2dx adjustEvent = AdjustEvent2dx("{% $variables.event.token %}");
adjustEvent.setCallbackId("{% $variables.event.callbackId %}");
Adjust2dx::trackEvent(adjustEvent);
```

### Send an event {% #send-an-event %}

Call the `Adjust2dx::trackEvent` method with your `AdjustEvent2dx` instance as an argument to send your event to Adjust.

| Argument                       | Type                           | Description                    |
| ------------------------------ | ------------------------------ | ------------------------------ |
| `adjustEvent`                  | `AdjustEvent2dx`               | Your `AdjustEvent2dx` instance |

```cpp
AdjustEvent2dx adjustEvent = AdjustEvent2dx("{% $variables.event.token %}");
Adjust2dx::trackEvent(adjustEvent);
```

## Tutorial {% #tutorial %}

This tutorial demonstrates how to use the `AdjustEvent2dx` class to send event information to Adjust. You will learn:

1. How to create create and populate an `AdjustEvent2dx` instance.
1. How to use the `AdjustEvent2dx` class in your app to send event information to Adjust.

To send event information to Adjust, follow these steps:

1. Instantiate and populate an `AdjustEvent2dx` object with your Adjust event token. In the example below, the following properties are set:
   - The event revenue is set to _{% $variables.event.revenue.amount %}_ and the currency code is set to _{% $variables.event.revenue.currency %}_.
   - The event deduplication ID is set to _{% $variables.event.deduplicationId %}_.
   - The event token and revenue amount are added as callback parameters.
   - The ID of the associated product and ID of the user who triggered the event are added as partner parameters.
   - The callback ID is set to _{% $variables.event.callbackId %}_.
1. At the end of your function, send the information to Adjust by calling `Adjust2dx::trackEvent()` with your `AdjustEvent2dx` instance as an argument.
1. Call your function in response to an action in your app. In the example below, the function is called when the `Send Event` button is pressed.

```cpp
#include "Adjust/Adjust2dx.h"

std::string appToken = "{% $variables.config.token %}";
std::string environment = AdjustEnvironmentSandbox2dx;

AdjustConfig2dx adjustConfig = AdjustConfig2dx(appToken, environment);
Adjust2dx::initSdk(adjustConfig);

AdjustEvent2dx adjustEvent = new AdjustEvent2dx("g3mfiw");
adjustEvent.setRevenue({% $variables.event.revenue.amount %}, "{% $variables.event.revenue.currency %}");
adjustEvent.setDeduplicationId("{% $variables.event.deduplicationId %}");
adjustEvent.addCallbackParameter({% $variables.event.callbackParams[0] %});
adjustEvent.addCallbackParameter({% $variables.event.callbackParams[1] %});
adjustEvent.addPartnerParameter({% $variables.event.partnerParams[0] %});
adjustEvent.addPartnerParameter({% $variables.event.partnerParams[1] %});
adjustEvent.setCallbackId("{% $variables.event.callbackId %}");
Adjust2dx::trackEvent(adjustEvent);
```

You will see a log output containing the details of your `AdjustEvent2dx` instance when the event is sent to Adjust.

```txt
Path:      /event
ClientSdk: cocos2dx{% $versions.cocos2dx.v5%}
Parameters:
  android_uuid     {% $variables.ids.android_uuid %}
  api_level        34
  app_token        {% $variables.config.token %}
  app_version      1.0
  attribution_deeplink 1
  callback_id      {% $variables.event.callbackId %}
  callback_params  {{% $variables.event.callbackParamsJson[0] %}, {% $variables.event.callbackParamsJson[1] %}}
  connectivity_type 1
  country          US
  cpu_type         arm64-v8a
  created_at       2024-01-25T14:13:16.151Z+0100
  currency         {% $variables.event.revenue.currency %}
  device_manufacturer Google
  device_name      sdk_gphone64_arm64
  device_type      phone
  display_height   2205
  display_width    1080
  environment      sandbox
  event_buffering_enabled 0
  event_count      3
  event_token      {% $variables.event.token %}
  gps_adid         {% $variables.ids.gps_adid %}
  gps_adid_attempt 2
  gps_adid_src     service
  hardware_name    UE1A.230829.036
  language         en
  mcc              310
  mnc              260
  needs_response_details 1
  os_build         UE1A.230829.036
  os_name          android
  os_version       14
  package_name     com.adjust.examples
  partner_params   {{% $variables.event.partnerParamsJson[0] %}, {% $variables.event.partnerParamsJson[1] %}}
  revenue          {% $variables.event.revenue.amount %}
  screen_density   high
  screen_format    long
  screen_size      normal
  session_count    2
  session_length   23
  subsession_count 1
  time_spent       23
  tracking_enabled 1
  deduplication_id {% $variables.event.deduplicationId %}
  ui_mode          1
```
