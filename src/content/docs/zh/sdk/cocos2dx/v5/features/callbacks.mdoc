---
title: 发送回传信息
description: 使用这些方法向 Adjust 发送回传信息。
slug: zh/sdk/cocos2dx/features/callbacks
versions:
- label: v5
  value: v5
  default: true
- label: v4
  value: v4
redirects:
  v4: /zh/sdk/cocos2dx/v4/features/callbacks
---

设置回传来在 SDK 向 Adjust 发送信息时调用函数。您可以针对 **会话** 和 **事件** 设置回传。

## 会话回传{% #session-callbacks %}

设置会话回传来在 SDK 向 Adjust 发送会话信息时调用函数。您可以创建 **success** 回传和 **failure** 回传。SDK 向 Adjust 服务器发送信息时会调用 **success** 回传。SDK 向 Adjust 发送信息时出现问题会调用 **failure** 回传。

会话回传可访问响应数据对象。您可以在回传函数中使用其属性。

| 属性             | 类型            | 描述                         |
| -------------- | ------------- | -------------------------- |
| `message`      | `std::string` | 服务器信息或者 SDK 记录的错误信息。       |
| `timestamp`    | `std::string` | 来自 Adjust 服务器的时间戳。         |
| `adid`         | `std::string` | 由 Adjust 提供的设备唯一标识符。       |
| `jsonResponse` | `std::string` | 带服务器响应的 JSON 对象。           |
| `willRetry`    | `bool`        | 指示包发送失败后是否再次尝试发送。仅适用于失败回传。 |

### 成功回传{% #session-success-callbacks %}

配置 success 回传以便在 SDK 记录到会话时调用函数。

```cpp
std::string appToken = "{% $variables.config.token %}";
std::string environment = AdjustEnvironmentSandbox2dx;

AdjustConfig2dx adjustConfig = AdjustConfig2dx(appToken, environment);
adjustConfig.setLogLevel(AdjustLogLevel2dxVerbose);
adjustConfig.setSessionSuccessCallback([](AdjustSessionSuccess2dx adjustSessionSuccess) {
    // process adjustSessionSuccess
});
Adjust2dx::initSdk(adjustConfig);
```

### 失败回传{% #session-failure-callbacks %}

设置 failure 回传来在 SDK 未能记录到会话时调用函数。

```cpp
std::string appToken = "{% $variables.config.token %}";
std::string environment = AdjustEnvironmentSandbox2dx;

AdjustConfig2dx adjustConfig = AdjustConfig2dx(appToken, environment);
adjustConfig.setLogLevel(AdjustLogLevel2dxVerbose);
adjustConfig.setSessionFailureCallback([](AdjustSessionFailure2dx adjustSessionFailure) {
    // process adjustSessionFailure
});
Adjust2dx::initSdk(adjustConfig);
```

## 事件回传 {% #event-callbacks %}

设置事件回传来在 SDK 向 Adjust 发送事件信息时调用函数。您可以创建 **success** 回传和 **failure** 回传。SDK 向 Adjust 服务器发送信息时会调用 **success** 回传。SDK 向 Adjust 发送信息时出现问题会调用 **failure** 回传。

事件回传可访问响应数据对象。您可以在回传函数中使用其属性。

| 属性             | 类型            | 描述                          |
| -------------- | ------------- | --------------------------- |
| `message`      | `std::string` | 服务器信息或者 SDK 记录的错误信息。        |
| `timestamp`    | `std::string` | 来自 Adjust 服务器的时间戳。          |
| `adid`         | `std::string` | 由 Adjust 提供的设备唯一标识符。        |
| `eventToken`   | `std::string` | 事件识别码                       |
| `callbackId`   | `std::string` | 事件对象上设置的自定义回传 ID            |
| `jsonResponse` | `std::string` | 带服务器响应的 JSON 对象。            |
| `willRetry`    | `bool`        | 指示包发送失败后是否再次尝试发送。仅在失败回传时可用。 |

### 成功回传{% #event-success-callbacks %}

配置 success 回传以便在 SDK 记录到事件时调用函数。

```cpp
std::string appToken = "{% $variables.config.token %}";
std::string environment = AdjustEnvironmentSandbox2dx;

AdjustConfig2dx adjustConfig = AdjustConfig2dx(appToken, environment);
adjustConfig.setLogLevel(AdjustLogLevel2dxVerbose);
adjustConfig.setEventSuccessCallback([](AdjustEventSuccess2dx adjustEventSuccess) {
    // process adjustEventSuccess
});
Adjust2dx::initSdk(adjustConfig);
```

### 失败回传{% #event-failure-callbacks %}

设置 failure 回传来在 SDK 未能记录到事件时调用函数。

```cpp
std::string appToken = "{% $variables.config.token %}";
std::string environment = AdjustEnvironmentSandbox2dx;

AdjustConfig2dx adjustConfig = AdjustConfig2dx(appToken, environment);
adjustConfig.setLogLevel(AdjustLogLevel2dxVerbose);
adjustConfig.setEventFailureCallback([](AdjustEventFailure2dx adjustEventFailure) {
    // process adjustEventFailure
});
Adjust2dx::initSdk(adjustConfig);
```
