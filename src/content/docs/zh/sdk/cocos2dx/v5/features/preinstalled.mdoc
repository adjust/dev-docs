---
title: 发送预安装应用活动
description: 配置推广活动，以从预安装应用发送信息。
slug: zh/sdk/cocos2dx/features/preinstalled
versions:
  - label: v5
    value: v5
    default: true
  - label: v4
    value: v4
redirects:
  v4: /zh/sdk/cocos2dx/v4
---

您可以通过 Adjust SDK 来记录用户设备上的预安装应用的活动，借此发送未通过推广活动下载应用的用户信息。

使用`bool`参数调用`AdjustConfig2dx`实例的`setPreinstallTrackingEnabled`方法来控制是否启用预安装监测。

```cpp
#include "Adjust/Adjust2dx.h"

std::string appToken = "{% $variables.config.token %}";
std::string environment = AdjustEnvironmentSandbox2dx;

AdjustConfig2dx adjustConfig = AdjustConfig2dx(appToken, environment);
adjustConfig.setPreinstallTrackingEnabled(true);
Adjust2dx::initSdk(adjustConfig);
```

Adjust SDK 提供 5 种监测预安装应用的方法：

- [系统属性 (System Properties)](#system-properties)。
- [内容提供器 (Content Provider)](#content-provider)。
- [系统安装器接收器 (System Installer Receiver)](#system-installer-receiver)。
- [全局可读目录](#world-readable-directory)。
- [默认链接识别码](#default-link-token)。

## 系统属性 (System Properties){% #system-properties %}

原始设备制造商 (OEM) 可借助安卓系统属性归因预安装应用。OEM (原始设备制造商) 将归因信息写入一个文件，并将其路径添加至系统属性。Adjust SDK 在初始化时读取该文件并归因安装。

## 内容提供器 (Content Provider){% #content-provider %}

内容提供器方法采用只读内容提供器。SDK 使用内容分解器从请求中收集预安装信息。

要设置权限，请将下列行添加至您的 `AndroidManifest.xml` 文件。

```xml
<uses-permission android:name="com.adjust.preinstall.READ_PERMISSION" id="sl-md0000000"/>
```

要查看设备上的预安装应用列表，请将下列行添加至您的 `AndroidManifest.xml` 文件。

```xml
<queries id="sl-md0000000">
   <intent id="sl-md0000000">
       <action android:name="com.attribution.REFERRAL_PROVIDER" id="sl-md0000000"/>
   </intent>
</queries>
```

## 系统安装器接收器 (System Installer Receiver){% #system-installer-receiver %}

系统安装器方法使用广播接收器。系统安装器会广播预安装信息。Adjust SDK 使用系统预安装 referrer 接收器读取该信息。

要设置接收器，请将以下内容添加至您的 `AndroidManifest.xml` 文件。

```xml
<receiver android:name="com.adjust.sdk.AdjustPreinstallReferrerReceiver" id="sl-md0000000">
   <intent-filter id="sl-md0000000">
      <action android:name="com.attribution.SYSTEM_INSTALLER_REFERRER" id="sl-md0000000" />
   </intent-filter>
</receiver>
```

## 全局可读目录{% #world-readable-directory %}

将预安装应用的归因信息存储在一个全局可读的目录中。SDK 会在安装时从此文件中读取信息，以此归因用户。系统加密协议会保护应用数据。

要允许 Adjust SDK 访问此信息，请使用文件路径调用`AdjustConfig2dx`实例的`setPreinstallFilePath`方法。

```cpp
#include "Adjust/Adjust2dx.h"

std::string appToken = "{% $variables.config.token %}";
std::string environment = AdjustEnvironmentSandbox2dx;

AdjustConfig2dx adjustConfig = AdjustConfig2dx(appToken, environment);
adjustConfig.setPreinstallFilePath("{% $variables.config.preinstallFilePath %}");
Adjust2dx::initSdk(adjustConfig);
```

## 默认链接识别码{% #default-link-token %}

通过设置默认链接识别码，您可以将所有预安装归因到预先定义的 Adjust 链接。Adjust 将所有信息记录在此识别码下，直至归因来源发生变化。设置方法：

1. [在 Campaign Lab 中创建一个新的推广活动链接](https://help.adjust.com/zh/article/links)。

   ```http
   https://app.adjust.com/{% $variables.config.defaultTracker %}
   ```

1. 复制此识别码并将其指定给应用委托文件中`AdjustConfig2dx`实例的`DefaultTracker`属性。

   ```cpp
   #include "Adjust/Adjust2dx.h"

   std::string appToken = "{% $variables.config.token %}";
   std::string environment = AdjustEnvironmentSandbox2dx;

   AdjustConfig2dx adjustConfig = AdjustConfig2dx(appToken, environment);
   adjustConfig.setDefaultTracker("{% $variables.config.defaultTracker %}");
   Adjust2dx::initSdk(adjustConfig);
   ```

1. 创建并运行应用。如果您启用了日志，就应该能在日志中看到如下信息

   ```text
   Default tracker: '{% $variables.config.defaultTracker %}'.
   ```
