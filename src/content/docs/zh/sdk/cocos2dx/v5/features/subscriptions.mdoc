---
title: 发送订阅信息
description: 使用这些方法向 Adjust 发送订阅信息。
slug: zh/sdk/cocos2dx/features/subscriptions
versions:
  - label: v5
    value: v5
    default: true
  - label: v4
    value: v4
redirects:
  v4: /zh/sdk/cocos2dx/v4/features/subscriptions
---

{% callout type="important" %}
下列步骤仅会在 Adjust SDK 中设置订阅跟踪。要启动该功能，Adjust 需要设置应用相关的具体信息。请发送邮件至[support@adjust.com](mailto:support@adjust.com)或与您的技术客户经理联系进行设置。

{% /callout %}

您可以用 Adjust SDK 记录 App Store 和 Play 应用商店的订阅，并验证这些订阅是否有效。

## 工作原理{% #how-it-works %}

用户购买订阅后，创建一个 `AdjustAppStoreSubscription2dx` 或 `AdjustPlayStoreSubscription2dx` 实例。这些类包含表示订阅详细信息的属性，允许 Adjust 监测订阅事件。

## App Store 订阅 {% #app-store-subscriptions %}

`AdjustAppStoreSubscription2dx`类代表 App Store 订阅信息。您可以创建该类的多个实例来向 Adjust 发送订阅信息。

要开始设置，先实例化一个包含订阅购买细节的订阅对象。

### 实例化 App Store 订阅对象{% #instantiate-an-app-store-subscription-object %}

使用以下参数实例化`AdjustAppStoreSubscription2dx`对象：

{% deflist %}
`price` (`std::string`)

: 订阅价格

`currency` (`std::string`)

: 订阅使用的币种。此信息格式为[`priceLocale`](https://developer.apple.com/documentation/storekit/skproduct/1506145-pricelocale?language=objc)对象的 [`currencyCode`](https://developer.apple.com/documentation/foundation/nslocale/1642836-currencycode?language=objc)。

`transactionId` (`std::string`)

: 您的交易 ID。

{% /deflist %}

```cpp
AdjustAppStoreSubscription2dx subscription = AdjustAppStoreSubscription2dx(
   {% $variables.subscription.appStoreSubscription.price %}, // price
   {% $variables.subscription.appStoreSubscription.currency %}, // currency
   {% $variables.subscription.appStoreSubscription.transactionId %} // transactionId
);
```

### 记录购买日期{% #record-the-purchase-date-app-store %}

您可以记录用户购买订阅的日期。SDK 会返回该数据用于报告。

在您的订阅对象上调用 `setTransactionDate` 方法来记录订阅的时间戳。

{% deflist %}
`transactionDate` (`std::string`)

: 订阅时间戳

{% /deflist %}

```cpp
AdjustAppStoreSubscription2dx subscription = AdjustAppStoreSubscription2dx(
   {% $variables.subscription.appStoreSubscription.price %}, // price
   {% $variables.subscription.appStoreSubscription.currency %}, // currency
   {% $variables.subscription.appStoreSubscription.transactionId %} // transactionId
);
subscription.setTransactionDate({% $variables.subscription.appStoreSubscription.transactionDate %});
```

### 记录购买地区{% #record-the-purchase-region %}

您可以记录用户购买订阅的地区。为此，请在订阅对象上调用 `setSalesRegion` 方法并将国家代码作为 **字符串** 传递。此信息格式需为 [`Storefront`](https://developer.apple.com/documentation/storekit/storefront/3792000-countrycode) 对象 的 [`countryCode`](https://developer.apple.com/documentation/storekit/storefront) 。

{% deflist %}
`salesRegion` (`std::string`)

: 订阅的国家代码。

{% /deflist %}

```cpp
AdjustAppStoreSubscription2dx subscription = AdjustAppStoreSubscription2dx(
   {% $variables.subscription.appStoreSubscription.price %}, // price
   {% $variables.subscription.appStoreSubscription.currency %}, // currency
   {% $variables.subscription.appStoreSubscription.transactionId %} // transactionId
);
subscription.setSalesRegion({% $variables.subscription.appStoreSubscription.salesRegion %});
```

### 添加回传参数{% #add-callback-parameters-app-store %}

您可以向订阅对象附加回传参数。SDK 会将这些参数附加至您的回传 URL。要添加回传参数，请在订阅对象上调用 `addCallbackParameter` 方法。多次调用该方法可添加多个回传参数。

```cpp
AdjustAppStoreSubscription2dx subscription = AdjustAppStoreSubscription2dx(
   {% $variables.subscription.appStoreSubscription.price %}, // price
   {% $variables.subscription.appStoreSubscription.currency %}, // currency
   {% $variables.subscription.appStoreSubscription.transactionId %} // transactionId
);
subscription.addCallbackParameter({% $variables.subscription.key1 %});
subscription.addCallbackParameter({% $variables.subscription.key2 %});
```

### 添加合作伙伴参数{% #add-partner-parameters-app-store %}

您可以向订阅对象附加合作伙伴参数。用户购买订阅时，SDK 会将这些参数发送至 Adjust 服务器。Adjust 服务器会将此信息转发至您的合作伙伴。要添加合作伙伴参数，请在您的订阅对象上调用`addPartnerParameter`方法。多次调用该方法可添加多个合作伙伴参数。

```cpp
AdjustAppStoreSubscription2dx subscription = AdjustAppStoreSubscription2dx(
   {% $variables.subscription.appStoreSubscription.price %}, // price
   {% $variables.subscription.appStoreSubscription.currency %}, // currency
   {% $variables.subscription.appStoreSubscription.transactionId %} // transactionId
);
subscription.addPartnerParameter({% $variables.subscription.key1 %});
subscription.addPartnerParameter({% $variables.subscription.key2 %});
```

### App Store 订阅教程{% #tutorial-app-store %}

设置好订阅对象后，您就可以通过 Adjust SDK 对其进行记录了。

本教程将展示如何使用`AdjustAppStoreSubscription2dx`和`AdjustPlayStoreSubscription2dx`类向 Adjust 发送订阅信息。您可了解到：

1. 如何创建并填充`AdjustAppStoreSubscription2dx`或`AdjustPlayStoreSubscription2dx`实例。
1. 如何在应用中使用`AdjustAppStoreSubscription2dx`和`AdjustPlayStoreSubscription2dx`类向 Adjust 发送订阅信息。

如需向 Adjust 发送订阅信息，请按照下列步骤操作：

1. 使用`price` 、 `currency`和`transactionId`实例化并填充`AdjustAppStoreSubscription2dx`对象。下方示例中使用了以下值：

   - `price`为 _{% $variables.subscription.appStoreSubscription.price %}_ 。
   - `currency`为 _{% $variables.subscription.appStoreSubscription.currency %}_ 。
   - `transactionId`为 _{% $variables.subscription.appStoreSubscription.transactionId %}_

1. 下方示例中设置了以下属性：

   - 交易日期设为 _{% $variables.subscription.appStoreSubscription.transactionDate %}_
   - 销售地区设为 _{% $variables.subscription.appStoreSubscription.salesRegion %}_ 。
   - 回传参数设为 _{% $variables.subscription.key1 %}_ 和 _{% $variables.subscription.key2 %}_ 。
   - 合作伙伴参数设为 _{% $variables.subscription.key1 %}_ 和 _{% $variables.subscription.key2 %}_ 。

1. 在函数末尾，使用`AdjustAppStoreSubscription2dx`实例作为参数调用`trackAppStoreSubscription`，以此将信息发送至 Adjust。

```cpp
#include "Adjust/Adjust2dx.h"

std::string appToken = "{% $variables.config.token %}";
std::string environment = AdjustEnvironmentSandbox2dx;

AdjustConfig2dx adjustConfig = AdjustConfig2dx(appToken, environment);
Adjust2dx::initSdk(adjustConfig);

AdjustAppStoreSubscription2dx subscription = AdjustAppStoreSubscription2dx(
   {% $variables.subscription.appStoreSubscription.price %}, // price
   {% $variables.subscription.appStoreSubscription.currency %}, // currency
   {% $variables.subscription.appStoreSubscription.transactionId %} // transactionId
);
subscription.setTransactionDate({% $variables.subscription.appStoreSubscription.transactionDate%});
subscription.setSalesRegion({% $variables.subscription.appStoreSubscription.salesRegion %});
subscription.addCallbackParameter({% $variables.subscription.key1 %});
subscription.addCallbackParameter({% $variables.subscription.key2 %});
subscription.addPartnerParameter({% $variables.subscription.key1 %});
subscription.addPartnerParameter({% $variables.subscription.key2 %});
Adjust2dx::trackAppStoreSubscription(subscription);
```

## Play 商店订阅 {% #play-store-subscriptions %}

`AdjustPlayStoreSubscription2dx`类代表 App Store 订阅信息。您可以创建该类的多个实例来向 Adjust 发送订阅信息。

要开始设置，先实例化一个包含订阅购买细节的订阅对象。

### 实例化 Play 应用商店订阅对象{% #instantiate-a-play-store-subscription-object %}

使用以下参数实例化`AdjustPlayStoreSubscription2dx`对象：

{% deflist %}
`price` (`std::string`)

: 订阅价格

`currency` (`std::string`)

: 订阅使用的币种

`sku` (`std::string`)

: 产品 ID

`orderId` (`std::string`)

: 您的交易 ID

`signature` (`std::string`)

: 购买数据的签名

`purchaseToken` (`std::string`)

: 交易唯一识别码。请参考 [Google 的文档](<https://developer.android.com/reference/com/android/billingclient/api/Purchase#getPurchaseToken()>)，了解更多信息

{% /deflist %}

```cpp
AdjustPlayStoreSubscription2dx subscription = AdjustPlayStoreSubscription2dx(
   {% $variables.subscription.playStoreSubscription.price %}, // price
   {% $variables.subscription.playStoreSubscription.currency %}, // currency
   {% $variables.subscription.playStoreSubscription.sku %}, // sku
   {% $variables.subscription.playStoreSubscription.orderId %}, // orderId
   {% $variables.subscription.playStoreSubscription.signature %}, // signature
   {% $variables.subscription.playStoreSubscription.purchaseToken %} // purchaseToken
);
```

### 记录购买日期{% #record-the-purchase-date-play-store %}

您可以记录用户购买订阅的日期。SDK 会返回该数据用于报告。

在您的订阅对象上调用 `setPurchaseTime` 方法来记录订阅的时间戳。

{% deflist %}
`purchaseTime` (`std::string`)

: 订阅时间戳。

{% /deflist %}

```cpp
AdjustPlayStoreSubscription2dx subscription = AdjustPlayStoreSubscription2dx(
   {% $variables.subscription.playStoreSubscription.price %}, // price
   {% $variables.subscription.playStoreSubscription.currency %}, // currency
   {% $variables.subscription.playStoreSubscription.sku %}, // sku
   {% $variables.subscription.playStoreSubscription.orderId %}, // orderId
   {% $variables.subscription.playStoreSubscription.signature %}, // signature
   {% $variables.subscription.playStoreSubscription.purchaseToken %} // purchaseToken
);
subscription.setPurchaseTime({% $variables.subscription.playStoreSubscription.purchaseTime%});
```

### 添加回传参数{% #add-callback-parameters-play-store %}

您可以向订阅对象附加回传参数。SDK 会将这些参数附加至您的回传 URL。要添加回传参数，请在订阅对象上调用 `addCallbackParameter` 方法。多次调用该方法可添加多个回传参数。

```cpp
AdjustPlayStoreSubscription2dx subscription = AdjustPlayStoreSubscription2dx(
   {% $variables.subscription.playStoreSubscription.price %}, // price
   {% $variables.subscription.playStoreSubscription.currency %}, // currency
   {% $variables.subscription.playStoreSubscription.sku %}, // sku
   {% $variables.subscription.playStoreSubscription.orderId %}, // orderId
   {% $variables.subscription.playStoreSubscription.signature %}, // signature
   {% $variables.subscription.playStoreSubscription.purchaseToken %} // purchaseToken
);
subscription.addCallbackParameter({% $variables.subscription.key1 %});
subscription.addCallbackParameter({% $variables.subscription.key2 %});
```

### 添加合作伙伴参数{% #add-partner-parameters-play-store %}

您可以向订阅对象附加合作伙伴参数。用户购买订阅时，SDK 会将这些参数发送至 Adjust 服务器。Adjust 服务器会将此信息转发至您的合作伙伴。要添加合作伙伴参数，请在您的订阅对象上调用`addPartnerParameter`方法。多次调用该方法可添加多个合作伙伴参数。

```cpp
AdjustPlayStoreSubscription2dx subscription = AdjustPlayStoreSubscription2dx(
   {% $variables.subscription.playStoreSubscription.price %}, // price
   {% $variables.subscription.playStoreSubscription.currency %}, // currency
   {% $variables.subscription.playStoreSubscription.sku %}, // sku
   {% $variables.subscription.playStoreSubscription.orderId %}, // orderId
   {% $variables.subscription.playStoreSubscription.signature %}, // signature
   {% $variables.subscription.playStoreSubscription.purchaseToken %} // purchaseToken
);
subscription.addPartnerParameter({% $variables.subscription.key1 %});
subscription.addPartnerParameter({% $variables.subscription.key2 %});
```

### Play 商店订阅教程 {% #tutorial-play-store %}

设置好订阅对象后，您就可以通过 Adjust SDK 对其进行记录了。

本教程将展示如何使用`AdjustAppStoreSubscription2dx`和`AdjustPlayStoreSubscription2dx`类向 Adjust 发送订阅信息。您可了解到：

1. 如何创建并填充`AdjustAppStoreSubscription2dx`或`AdjustPlayStoreSubscription2dx`实例。
1. 如何在应用中使用`AdjustAppStoreSubscription2dx`和`AdjustPlayStoreSubscription2dx`类向 Adjust 发送订阅信息。

如需向 Adjust 发送订阅信息，请按照下列步骤操作：

1. 使用`price` 、 `currency` 、 `sku` 、 `orderId` 、 `signature` 、 `purchaseToken`实例化并填充`AdjustPlayStoreSubscription2dx`对象。下方示例中使用了以下值：

   - `price`为 _{% $variables.subscription.playStoreSubscription.price %}_ 。
   - `currency`为 _{% $variables.subscription.playStoreSubscription.currency %}_ 。
   - `sku`为 _{% $variables.subscription.playStoreSubscription.sku %}_ 。
   - `orderId`为 _{% $variables.subscription.playStoreSubscription.orderId %}_ 。
   - `signature`为 _{% $variables.subscription.playStoreSubscription.signature %}_ 。
   - `purchaseToken`为 _{% $variables.subscription.playStoreSubscription.purchaseToken %}_ 。

1. 下方示例中设置了以下属性：

   - 购买时间设置为 _{% $variables.subscription.playStoreSubscription.purchaseTime %}_
   - 回传参数设为 _{% $variables.subscription.key1 %}_ 和 _{% $variables.subscription.key2 %}_ 。
   - 合作伙伴参数设为 _{% $variables.subscription.key1 %}_ 和 _{% $variables.subscription.key2 %}_ 。

1. 在函数末尾，使用`AdjustAppStoreSubscription2dx`实例作为参数调用`trackPlayStoreSubscription`，以此将信息发送至 Adjust。

```cpp
#include "Adjust/Adjust2dx.h"

std::string appToken = "{% $variables.config.token %}";
std::string environment = AdjustEnvironmentSandbox2dx;

AdjustConfig2dx adjustConfig = AdjustConfig2dx(appToken, environment);
Adjust2dx::initSdk(adjustConfig);

AdjustPlayStoreSubscription2dx subscription = AdjustPlayStoreSubscription2dx(
   {% $variables.subscription.playStoreSubscription.price %}, // price
   {% $variables.subscription.playStoreSubscription.currency %}, // currency
   {% $variables.subscription.playStoreSubscription.sku %}, // sku
   {% $variables.subscription.playStoreSubscription.orderId %}, // orderId
   {% $variables.subscription.playStoreSubscription.signature %}, // signature
   {% $variables.subscription.playStoreSubscription.purchaseToken %} // purchaseToken
);
subscription.setPurchaseTime({% $variables.subscription.playStoreSubscription.purchaseTime%});
subscription.addCallbackParameter({% $variables.subscription.key1 %});
subscription.addCallbackParameter({% $variables.subscription.key2 %});
subscription.addPartnerParameter({% $variables.subscription.key1 %});
subscription.addPartnerParameter({% $variables.subscription.key2 %});
Adjust2dx::trackPlayStoreSubscription(subscription);
```
