---
title: 发送事件信息
description: 使用这些方法向 Adjust 发送事件信息。
slug: zh/sdk/cocos2dx/features/events
versions:
- label: v5
  value: v5
  default: true
- label: v4
  value: v4
redirects:
  v4: /zh/sdk/cocos2dx/v4/features/events
---

用户进行操作后，您可以使用 Adjust SDK 向 Adjust 服务器发送事件信息。Adjust 会记录这些事件并在您的[Datascape 报告](https://help.adjust.com/zh/article/datascape)、[服务器回传](https://help.adjust.com/zh/article/server-callbacks)和[云存储上传](https://help.adjust.com/zh/article/cloud-storage-uploads)中显示。

有关在 Adjust 中配置事件的更多信息，请参阅帮助中心的[添加事件指南](https://help.adjust.com/zh/article/add-events)。

## 工作原理{% #how-it-works %}

事件由`AdjustEvent2dx`实例表示。`AdjustEvent2dx`类包含多个属性，您可以使用事件信息填充这些属性并发送至 Adjust。`AdjustEvent2dx`类必须使用 Adjust 事件识别码实例化。您可以按照[添加事件指南](https://help.adjust.com/zh/article/add-events#copy-event-token)中的步骤在 AppView 中找到事件识别码。您可以设置每个属性来完整呈现事件。

完成所有需要设置的属性后，请使用`Adjust2dx::trackEvent()`方法将`AdjustEvent2dx`实例发送至 Adjust。Adjust 收到此对象后会记录事件信息用于报告。

## 参考{% #reference %}

`AdjustEvent2dx`类用于保存有关事件的信息。每个事件都由唯一的`AdjustEvent2dx`实例代表。

### 构造器{% #constructor %}

将事件识别码作为参数传递，实例化一个`AdjustEvent2dx`对象。

{% deflist %}
`eventToken` (`std::string`)

: 您的 Adjust 事件识别码。请参阅[添加事件](https://help.adjust.com/zh/article/add-events#manage-your-events)了解更多信息。



{% /deflist %}

```cpp
AdjustEvent2dx adjustEvent = AdjustEvent2dx("{% $variables.event.token %}");
Adjust2dx::trackEvent(adjustEvent);
```

### 设置事件收入{% #set-event-revenue %}

通过调用`setRevenue()`方法设置与事件关联的任何收入的金额以及货币代码。

{% deflist %}
`revenue` (`double`)

: 事件产生的收入额。

`currency` (`std::string`)

: 事件币种的[ISO 4217 代码](https://www.iban.com/currency-codes)。



{% /deflist %}

```cpp
AdjustEvent2dx adjustEvent = AdjustEvent2dx("{% $variables.event.token %}");
adjustEvent.setRevenue({% $variables.event.revenue.amount %}, "{% $variables.event.revenue.currency %}");
Adjust2dx::trackEvent(adjustEvent);
```

### 添加回传参数{% #add-callback-parameters %}

向`addCallbackParameter`方法传递`std::string`键值对以添加回传参数。Adjust 收到您的`AdjustEvent2dx`实例后，所有回传参数都会被发送到您的回传 URL。

{% deflist %}
`key` (`std::string`)

: 参数的名称 (键)。

`value` (`std::string`)

: 参数值。



{% /deflist %}

```cpp
AdjustEvent2dx adjustEvent = AdjustEvent2dx("{% $variables.event.token %}");
adjustEvent.addCallbackParameter({% $variables.event.callbackParams[0] %});
adjustEvent.addCallbackParameter({% $variables.event.callbackParams[1] %});
Adjust2dx::trackEvent(adjustEvent);
```

### 添加合作伙伴参数{% #add-partner-parameters %}

向`addPartnerParameter()`方法传递`string`键值对以添加回传参数。Adjust 收到您的`AdjustEvent2dx`实例后，所有合作伙伴参数都会被发送至您配置的外部合作伙伴。

{% deflist %}
`key` (`std::string`)

: 参数的名称 (键)。

`value` (`std::string`)

: 参数值。



{% /deflist %}

```cpp
AdjustEvent2dx adjustEvent = AdjustEvent2dx("{% $variables.event.token %}");
adjustEvent.addPartnerParameter({% $variables.event.partnerParams[0] %});
adjustEvent.addPartnerParameter({% $variables.event.partnerParams[1] %});
Adjust2dx::trackEvent(adjustEvent)
```

### 设置去重 ID {% #set-deduplication-id %}

为`AdjustEvent2dx`实例设置唯一标识符以通过调用`setDeduplicationId()`方法来去除重复的收入事件。SDK 会存储最近 10 个标识符，带有重复交易 ID 的收入事件会被跳过。

{% deflist %}
`deduplicationId` (`std::string`)

: 唯一的去重 ID。



{% /deflist %}

```cpp
AdjustEvent2dx adjustEvent = AdjustEvent2dx("{% $variables.event.token %}");
adjustEvent.setDeduplicationId("{% $variables.event.deduplicationId %}");
Adjust2dx::trackEvent(adjustEvent);
```

### 设置回传 ID {% #set-callback-id %}

调用`setCallbackId`方法为 Adjust 服务器设置唯一标识符，以便在事件回传中进行报告。

{% deflist %}
`callbackId` (`std::string`)

: 唯一的回传 ID。



{% /deflist %}

```cpp
AdjustEvent2dx adjustEvent = AdjustEvent2dx("{% $variables.event.token %}");
adjustEvent.setCallbackId("{% $variables.event.callbackId %}");
Adjust2dx::trackEvent(adjustEvent);
```

### 发送事件{% #send-an-event %}

使用您的`AdjustEvent2dx`实例作为参数调用`Adjust2dx::trackEvent`方法以将事件发送至 Adjust。

{% deflist %}
`adjustEvent` (`AdjustEvent2dx`)

: 您的`AdjustEvent2dx`实例。



{% /deflist %}

```cpp
AdjustEvent2dx adjustEvent = AdjustEvent2dx("{% $variables.event.token %}");
Adjust2dx::trackEvent(adjustEvent);
```

## 教程{% #tutorial %}

本教程演示了如何使用`AdjustEvent2dx`类向 Adjust 发送事件信息。您可了解到：

1. 如何创建并填充`AdjustEvent2dx`实例。
1. 如何在应用中使用`AdjustEvent2dx`类向 Adjust 发送事件信息。

如需向 Adjust 发送事件信息，请按照下列步骤操作：

1. 使用 Adjust 事件识别码实例化并填充`AdjustEvent2dx`对象。下方示例中设置了以下属性：

   - 事件收入设为 _{% $variables.event.revenue.amount %}_ ，货币代码设为 _{% $variables.event.revenue.currency %}_ 。
   - 事件去重 ID 设置为 _{% $variables.event.deduplicationId %}_ 。
   - 事件识别码和收入金额被添加为回传参数。
   - 关联产品的 ID 和触发事件的用户 ID 被添加为合作伙伴参数。
   - 回传 ID 设置为 _{% $variables.event.callbackId %}_ 。

1. 在函数末尾，使用`AdjustEvent2dx`实例作为参数调用`Adjust2dx::trackEvent()`，以此将信息发送至 Adjust。

1. 根据应用中的操作调用函数。在下面的示例中，当`Send Event`按钮被按下时该函数被调用。

```cpp
#include "Adjust/Adjust2dx.h"

std::string appToken = "{% $variables.config.token %}";
std::string environment = AdjustEnvironmentSandbox2dx;

AdjustConfig2dx adjustConfig = AdjustConfig2dx(appToken, environment);
Adjust2dx::initSdk(adjustConfig);

AdjustEvent2dx adjustEvent = AdjustEvent2dx("g3mfiw");
adjustEvent.setRevenue({% $variables.event.revenue.amount %}, "{% $variables.event.revenue.currency %}");
adjustEvent.setDeduplicationId("{% $variables.event.deduplicationId %}");
adjustEvent.addCallbackParameter({% $variables.event.callbackParams[0] %});
adjustEvent.addCallbackParameter({% $variables.event.callbackParams[1] %});
adjustEvent.addPartnerParameter({% $variables.event.partnerParams[0] %});
adjustEvent.addPartnerParameter({% $variables.event.partnerParams[1] %});
adjustEvent.setCallbackId("{% $variables.event.callbackId %}");
Adjust2dx::trackEvent(adjustEvent);
```

事件发送至 Adjust 后，您将看到包含`AdjustEvent2dx`实例详情的日志输出。

```txt
Path:      /event
ClientSdk: cocos2dx{% $versions.cocos2dx.v5%}
Parameters:
  android_uuid     {% $variables.ids.android_uuid %}
  api_level        34
  app_token        {% $variables.config.token %}
  app_version      1.0
  attribution_deeplink 1
  callback_id      {% $variables.event.callbackId %}
  callback_params  {{% $variables.event.callbackParamsJson[0] %}, {% $variables.event.callbackParamsJson[1] %}}
  connectivity_type 1
  country          US
  cpu_type         arm64-v8a
  created_at       2024-01-25T14:13:16.151Z+0100
  currency         {% $variables.event.revenue.currency %}
  device_manufacturer Google
  device_name      sdk_gphone64_arm64
  device_type      phone
  display_height   2205
  display_width    1080
  environment      sandbox
  event_buffering_enabled 0
  event_count      3
  event_token      {% $variables.event.token %}
  gps_adid         {% $variables.ids.gps_adid %}
  gps_adid_attempt 2
  gps_adid_src     service
  hardware_name    UE1A.230829.036
  language         en
  mcc              310
  mnc              260
  needs_response_details 1
  os_build         UE1A.230829.036
  os_name          android
  os_version       14
  package_name     com.adjust.examples
  partner_params   {{% $variables.event.partnerParamsJson[0] %}, {% $variables.event.partnerParamsJson[1] %}}
  revenue          {% $variables.event.revenue.amount %}
  screen_density   high
  screen_format    long
  screen_size      normal
  session_count    2
  session_length   23
  subsession_count 1
  time_spent       23
  tracking_enabled 1
  deduplication_id {% $variables.event.deduplicationId %}
  ui_mode          1
```

{% deflist /%}
