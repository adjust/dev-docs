---
title: "Unity SDK 集成"
description: "使用 Unity SDK，在 Unity 应用中使用 Adjust 功能。"
category-title: "Unity SDK"
slug: "en/sdk/unity"
sidebar-position: 3
versions: 
    - 
        label: "v5"
        value: "v5"
        default: true
    - 
        label: "v4"
        value: "v4"
redirects: 
    v4: "/en/sdk/unity/v4"
---
通过 Adjust Unity SDK，您可以在 Unity 应用中记录归因、事件以及更多信息。请按照本指南中说明的步骤操作，在应用内设置 Adjust SDK。

\{% callout type="note" %\}
Adjust SDK 支持 iOS 12 或更新版本，以及安卓 API 级别 21 \(Lollipop\) 或更新版本。
\{% /callout %\}

1\. 获取 Adjust SDK\{% \#get\-the\-adjust\-sdk %\}
-------------------------------------------------------

要安装 Adjust SDK，请选择下列方法之一。

### 安装 Unity 包\{% \#install\-unity\-package %\}

要在您的 Unity 应用中使用 Adjust SDK，请先将 SDK 加入项目。您可以从[GitHub 发布页面](https://github.com/adjust/adjust_unity_sdk/releases/latest)下载最新版本的 SDK。

要向 Unity 项目中导入 Adjust SDK，请按照下列步骤操作：

1. 打开 Unity Editor。
2. 选择 **Assets \-\-> Import Package \-\-> Custom Package** 。
3. 选择已下载的 SDK 包。

### 使用 Unity Package Manager\{% \#use\-the\-unity\-package\-manager %\}

要使用 Unity Package Manager 安装 Adjust SDK，请按照下列步骤操作：

1. 在 Unity 编辑器中选择 **Package Manager** 窗口。
2. 选择 **Add package from git URL** 。
3. 输入以下 URL：`https://github.com/adjust/unity_sdk.git?path=Assets/Adjust` .

2\. 安装 iOS 和安卓 SDK \{% \#install\-ios\-and\-android\-sdks %\}
---------------------------------------------------------------------

SDK v5 不再使用 iOS 和安卓 SDK 作为二进制依赖。要安装底层 iOS 和安卓 SDK，您需要使用[External Dependency Manager for Unity \(EDM4U\)](https://github.com/googlesamples/unity-jar-resolver)从 CocoaPods 和 Maven 安装包。

要确保为 iOS 正确加载隐私清单和框架，您需要禁用静态链接。为此请进行下列操作：

1. 选择 **Assets \-> External Dependency Manager \-> iOS Resolver \-> Settings** 。
2. 找到 **Link frameworks statically** 选项并取消选中。

![A screenshot of the resolver settings menu](@images/unity/link-frameworks-statically.png)

3\. 集成 SDK\{% \#integrate\-the\-sdk %\}
---------------------------------------------

Adjust SDK 包含一个 Unity [prefab](https://docs.unity3d.com/Manual/Prefabs.html)，其中含有模板游戏对象和一个 Adjust 脚本。您可以使用该脚本配置 SDK。要在 Unity editor 中打开 prefab，请按照下列步骤操作：

1. 将 `Assets/Adjust/Adjust.prefab` 的 prefab 添加到您的第一个场景。
2. 打开 prefab 的 Inspector Menu。
3. prefab 菜单包含可编辑的字段，通过这些字段，您可以控制 Adjust SDK 的行为。

![Adjust SDK 在 Unity editor 中的 prefab 配置脚本截图。](@images/unity/1-prefab.png)

要设置 Adjust SDK，请输入下列信息：

1. 您的 **应用识别码** 。请查看应用设置，了解查找识别码的办法。
2. 您的 **环境** ： 
   * 如要测试应用并发送测试数据，请选择 **Sandbox** 。请在控制面板中启用 sandbox 模式，查看测试数据。
   * 如果您已经完成测试，准备发布应用，请选择 **Production** 。

3. 您的 **日志等级。** 这将控制您收到哪些日志。请查看[这篇文章](/en/sdk/unity/configuration#set-your-logging-level)，进一步了解日志等级设置。

当应用的 Awake 事件默认触发时，Adjust 就会初始化。要改变该行为，请勾选 **手动启动 SDK** 。这样您就能使用 config 实例作为参数，调用 `Adjust.InitSdk` 以初始化 Adjust SDK。

```cs
AdjustConfig adjustConfig = new AdjustConfig("{YourAppToken}", AdjustEnvironment.Sandbox);
Adjust.InitSdk(adjustConfig);
```

4\. 设置安卓设备\{% \#set\-up\-android\-devices %\}
----------------------------------------------------

### 添加 Google Play 服务\{% \#add\-google\-play\-services %\}

定向到 Google Play 商店的应用必须使用 gps\_adid \(Google 广告 ID\) 来识别设备。要访问 `play-services-ads-identifier`，请向项目中添加 `gps_adid` AAR。

\{% tabs %\}
\{% tab title="EDM4U" sync="edm4u" %\}
如果您使用的是[外部依赖管理器插件](https://developers.google.com/unity/archive#external_dependency_manager_for_unity)，请将下列行添加至您的`Dependencies.xml`文件：

```xml
<androidpackages id="sl-md0000000">
   <androidpackage spec="com.google.android.gms:play-services-ads-identifier:18.0.1" id="sl-md0000000" />
</androidPackages>
```

\{% /tab %\}

\{% tab title="Manual installation" sync="manual" %\}
要手动安装 ARR \(Android Archive\)，[请从 Maven 下载](https://maven.google.com/web/index.html#com.google.android.gms:play-services-ads-identifier:18.0.1 "Maven 上 AAR 程序包链接")并添加至`Assets/Plugins/Android`目录。
\{% /tab %\}
\{% /tabs %\}

### 收集 App Set Identifier\{% \#collect\-app\-set\-identifier %\}

[App Set Identifier](https://developer.android.com/design-for-safety/privacy-sandbox/reference/adservices/appsetid/AppSetId) 是一个唯一标识符，用户在设备上安装您的应用后，您可以通过此标识符监测这些应用的信息。同一位开发者开发的所有应用共享同一个 App Set ID，也就是说您可以从所有应用中收集有用的洞见。

\{% tabs %\}
\{% tab title="EDM4U" sync="edm4u" %\}
要记录设备的 App Set ID，您需要将以下依赖添加至您的 `Dependencies.xml`文件：

```xml
<androidpackages id="sl-md0000000">
   <androidpackage spec="com.google.android.gms:play-services-appset:16.0.2" id="sl-md0000000" />
</androidPackages>
```

\{% /tab %\}

\{% tab title="Manual installation" sync="manual" %\}
要手动安装 ARR \(Android Archive\)，[请从 Maven 下载](https://maven.google.com/web/index.html#com.google.android.gms:play-services-appset:16.0.2 "Maven 上 AAR 程序包链接")并添加至`Assets/Plugins/Android`目录。
\{% /tab %\}
\{% /tabs %\}

### 设置 Install Referrer

Install Referrer 是一种唯一标识符，可用来将应用安装归因至来源。Adjust SDK 需要该信息进行归因。您可以使用[Google Play Referrer API](https://developer.android.com/google/play/installreferrer)收集此信息。

您可以使用两种方式为 Google Play Referrer API 添加支持：

\{% tabs %\}
\{% tab title="EDM4U" sync="edm4u" %\}
在[自定义`build.gradle`文件](https://docs.unity3d.com/2023.1/Documentation/Manual/android-gradle-overview.html)中将 Install Referrer 库添加为依赖

```groovy
dependencies {
   implementation 'com.android.installreferrer:installreferrer:2.2'
}
```

\{% /tab %\}

\{% tab title="Manual installation" sync="manual" %\}
从 [Maven](https://maven.google.com/web/index.html?q=install#com.android.installreferrer:installreferrer)下载 Install Referrer 库，并将 ARR \(Android Archive\) 文件放入您的`Plugins/Android`文件夹中。
\{% /tab %\}
\{% /tabs %\}

#### Meta referrer 集成

通过 Adjust Meta Install Referrer 插件，Adjust SDK 可以支持 [Meta Install Referrer](https://developers.facebook.com/docs/app-ads/meta-install-referrer)。[要了解集成细节，请参考 Unity Meta Install Referrer 插件。](/en/sdk/unity/plugins/meta-referrer-plugin)

5\. 设置 SDK 签名\{% \#set\-up\-sdk\-signature %\}
-----------------------------------------------------

如果您想使用 SDK 签名库来保护 Adjust SDK 与 Adjust 服务器之间的通信，请按照[Adjust 帮助中心 SDK 签名指南中的说明](https://help.adjust.com/en/article/sdk-signature)进行操作。

6\. 构建您的应用\{% \#build\-your\-app %\}
------------------------------------------

如需完成应用创建流程，Adjust Unity 包需执行自定义创建后操作，以确保 Adjust SDK 可以在应用内如常运行。 此过程由 `AdjustEditor.cs` 中的 `OnPostprocessBuild` 方法执行。

您可以配置构建后选项来自定义应用版本。

![Adjust SDK 在 Unity editor 中的创建后配置脚本截图。](@images/unity/2-postbuild.png)

\{% tabs %\}
\{% tab title="iOS" icon="PlatformIos" %\}
\{% callout type="important" %\}
要执行 iOS 创建后流程，请确保已在 Unity Editor 中安装 **iOS build support** 。\{% /callout %\}

iOS 创建后流程会对生成的 Xcode 项目作出以下更改：

* 启用 Objective\-C 例外情况

#### 框架\{% \#frameworks %\}

您可以启用下列框架，访问 iOS 功能：

* `AdServices.framework`: 用于 Apple Search Ads 监测
* `AdSupport.framework`: 用于读取设备 IDFA
* `AppTrackingTransparency.framework`: 用于向用户征求监测许可及获取许可状态
* `StoreKit.framework`: 用来与 SKAdNetwork 框架通讯。

#### App Tracking Transparency 许可对话框\{% \#app\-tracking\-transparency\-consent\-dialog %\}

如果您使用了 ATT \(App Tracking Transparency\) 包装器，请输入一条 **用户跟踪描述** 消息。该消息会在用户收到请求许可对话弹窗时展示。

#### 深度链接\{% \#deep\-linking %\}

要启用深度链接，请添加下列信息：

* **iOS 通用链接域** ：用于通用链接的关联域。
* **iOS URL 标识符** ：应用的 bundle ID.
* **iOS URL scheme** ：与应用关联的 URL scheme。 \{% /tab %\}

\{% tab title="Android" icon="PlatformAndroid" %\}
安卓创建后流程会在`Assets/Plugins/Android/`中查找`AndroidManifest.xml`文件。如果不存在该文件，则从[`AdjustAndroidManifest.xml`](https://github.com/adjust/unity_sdk/blob/master/Assets/Adjust/Native/Android/AdjustAndroidManifest.xml "GitHub 上 AdjustAndroidManifest 文件链接")中创建副本。

#### 权限\{% \#permissions %\}

您可以启用下列许可，访问安卓功能：

* `android.permission.INTERNET`: 用于连接至互联网。
* `android.permission.ACCESS_NETWORK_STATE`: 用于读取设备所连接到的网络类型。
* `com.android.finsky.permission.BIND_GET_INSTALL_REFERRER_SERVICE` **已弃用** : 用于通过 Google Play Store intent 调取 install referrer 信息。
* `com.google.android.gms.permission.AD_ID`: 用于在安卓12 \(API level 31\) 及更高版本中读取设备广告 ID。请查看 [Google 的`AdvertisingIdClient.info`文档](https://developers.google.com/android/reference/com/google/android/gms/ads/identifier/AdvertisingIdClient.Info#public-string-getid) ，了解更多信息。

#### 深度链接\{% \#deep\-linking\-1 %\}

要启用深度链接，请添加下列信息：

**Android URI Schemes** ：深度链接的目的地。
\{% /tab %\}\{% /tabs %\}

该过程的输出显示在 Unity IDE 控制台窗口中。

7\. 测试集成\{% \#test\-your\-integration %\}
-----------------------------------------------

\{% callout type="tip" %\}
如果遇到任何问题，请发送邮件至 [support@adjust.com](mailto:support@adjust.com)，并在邮件中说明所有详情和日志。
\{% /callout %\}

采用 Adjust SDK 提供的工具，您可以测试并排除集成出现的问题。要测试集成，请按照下列步骤操作：

* 将您的环境设为 `AdjustEnvironment.Sandbox`
* 在 Adjust 控制面板结果中添加 sandbox 过滤器。
* 将[日志级别](/en/sdk/unity/configuration#set-your-logging-level)设为 `AdjustLogLevel.Verbose`。

### 测试 Google Play 服务集成\{% \#test\-google\-play\-services\-integration %\}

要测试 Adjust SDK 能否接收设备的 Google 广告 ID，请将[日志级别](/en/sdk/unity/configuration#set-your-logging-level)设为 `AdjustLogLevel.Verbose`，环境设为 `AdjustEnvironment.Sandbox`。启动应用，监测一次 `session` 或事件。如果 SDK 记录了 gps\_adid \(Google Play 服务广告主 ID\) 参数，就说明已经成功读取广告 ID。

如果您在获取 Google 广告 ID 时遇到任何问题，请在 [GitHub 库](https://github.com/adjust/unity_sdk)中提问，或联系 [support@adjust.com](mailto:support@adjust.com)。

