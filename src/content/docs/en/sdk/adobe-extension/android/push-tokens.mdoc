---
title: Configure push tokens
description: Configure push tokens for audiences and uninstall and reinstall measurement.
sidebar-position: 6
---

Push notifications enable you to deliver personalized content to your users. You can use deep links in push notifications to direct users to specific locations in your app and measure reattributions.

Each device generates a push token that is unique to the device. This is the token that is used to target the device with push notifications. To communicate a device's push token with Adjust, you can add it to your `AdjustAdobeExtensionConfig` instance.

The push token is a unique identifier that can be used to sort  [Audiences](https://help.adjust.com/en/article/audiences) and client callbacks. Push tokens are also required for [Uninstall and reinstall measurement](https://help.adjust.com/en/article/uninstalls-reinstalls).

## Tutorial {% #tutorial %}

To send your push token to Adjust, you need to call the `MobileCore.trackAction` API once you've obtained your token. To do this:

1. Assign the `AdjustAdobeExtension.ADOBE_ADJUST_ACTION_SET_PUSH_TOKEN` constant to a variable.
1. Create a new HashMap to hold your `contextData`.
1. Add the following values to your `contextData` HashMap:
   - Key: `AdjustAdobeExtension.ADOBE_ADJUST_PUSH_TOKEN`
   - Value: your push token
1. Call the `MobileCore.trackAction` method and pass the following arguments:
   {% deflist %}
   `action`: `String`

   : Pass the variable mapped to the `AdjustAdobeExtension.ADOBE_ADJUST_ACTION_SET_PUSH_TOKEN` constant.

   `contextData`: `Map<String, String>`

   : Pass your HashMap.
   {% /deflist %}

In the example below, the push token is set to "your_push_token".

```java
String action = AdjustAdobeExtension.ADOBE_ADJUST_ACTION_SET_PUSH_TOKEN;
Map<String, String> contextData= new HashMap<String, String>();
contextData.put(AdjustAdobeExtension.ADOBE_ADJUST_PUSH_TOKEN, "your_push_token");

MobileCore.trackAction(action, contextData);
```
