---
title: Configure push tokens
description: Configure push tokens for audiences and uninstall and reinstall measurement.
sidebar-position: 6
---

Push notifications enable you to deliver personalized content to your users. You can use deep links to direct users to specific pages in your app, and measure reattributions.

Each device generates a unique push token that's used to target it. To communicate a device's push token with Adjust, add it to your `AdjustAdobeExtensionConfig` instance.

- The push token is a unique identifier that can be used to sort [Audiences](https://help.adjust.com/en/article/audiences) and client callbacks.
- Push tokens are also required for [uninstall and reinstall measurement](https://help.adjust.com/en/article/uninstalls-reinstalls).

For more information about how to send event information to Adjust's servers when your users take specific actions, visit the [Send event information article](/en/sdk/adobe-extension/android/events#how-it-works).

## Example: Send a push token {% #example-send-push-token %}

This code sample demonstrates how to use the `MobileCore.trackAction` API to send your push token to Adjust.

To configure your event, follow these steps:

1. Create a new variable called `action`.
2. Assign `AdjustAdobeExtension.ADOBE_ADJUST_ACTION_SET_PUSH_TOKEN` to the variable you created.
3. Create a HashMap to hold your Adjust push token. The example below sets the following `contextData`:
   - Key: `AdjustAdobeExtension.ADOBE_ADJUST_PUSH_TOKEN`
   - Value: _your_push_token_
4. Send the information to Adjust: Pass the `action` variable and HashMap to the `MobileCore.trackAction` method.

```java
String action = AdjustAdobeExtension.ADOBE_ADJUST_ACTION_SET_PUSH_TOKEN;
Map<String, String> contextData= new HashMap<String, String>();
contextData.put(AdjustAdobeExtension.ADOBE_ADJUST_PUSH_TOKEN, "your_push_token");

MobileCore.trackAction(action, contextData);
```
