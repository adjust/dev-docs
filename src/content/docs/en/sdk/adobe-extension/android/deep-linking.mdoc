---
title: Set up deep linking
description: Configure your app to handle direct and deferred deep links.
sidebar-position: 3
---

Deep links are URIs (Uniform Resource Identifiers) that direct users to specific pages within your app. They enhance user experience by guiding them directly to relevant content after they interact with a link.

The Adjust Android Extension for the Adobe Experience SDK supports two types of deep linking, based on whether the user has already installed your app:

- **Direct deep links**: If the user already has your app installed, the link opens the specified page.
- **Deferred deep links**: If the user doesnâ€™t have your app installed, the link directs them to the app store to install it. After installation, the app opens the specified page.

## Reattribute users with direct deep links {% #reattribute-users-with-direct-deep-links %}

You can reattribute your users by sending deep link information to Adjust. When a user engages with a deep link, you can send this data to Adjust to update their attribution information.

1. First, create an `AdjustDeeplink` instance with your deep link URI. The `AdjustDeeplink` class validates this URI and checks the formatted string to ensure successful processing.

2. Then, call the `Adjust.processDeeplink` function to handle the deep link and pass the information to Adjust.

The `AdjustDeeplink` class constructor requires the following argument:

{% deflist %}
`url`: `Uri`

: The deep link URI that opens your app.
{% /deflist %}

The `Adjust.processDeeplink` function requires the following arguments:

{% deflist %}
`adjustDeeplink`: `AdjustDeeplink`

: The `AdjustDeeplink` instance you created.

`context`: `Context`

: The application context.
{% /deflist %}

### Example: Initialize a direct deep link {% #example-initialize-direct-deep-link %}

Here is an example of how to initialize and process a direct deep link.

```java
Intent intent = getIntent();
Uri data = intent.getData();
AdjustDeeplink adjustDeeplink = new AdjustDeeplink(data);
Adjust.processDeeplink(adjustDeeplink, getApplicationContext());
```

## Deferred deep link callbacks {% #deferred-deep-link-callbacks %}

The Adjust Android Extension for Adobe Experience SDK opens deferred deep links by default. To control this behavior, or perform validation before the deep link is opened, configure the extension to call a function when the app opens via a deferred deep link.

1. Call `setOnDeferredDeeplinkResponseListener` on your `AdjustAdobeExtensionConfig` instance.
2. Call `AdjustAdobeExtension.setConfiguration` to set your configuration.

The `OnDeferredDeeplinkResponseListener` function requires the following argument:

  {% deflist %}
  `onDeferredDeeplinkResponseListener`: `OnDeferredDeeplinkResponseListener`

  : A function that returns a `boolean` value. If it returns `false`, the extension won't open the deferred deep link.
  {% /deflist %}

### Example: Create a deferred deep link function {% #example-deferred-deep-link-function %}

Here is an example of a callback function that checks the deep link content using a function (`shouldAdjustSdkLaunchTheDeeplink`), and returns `true` or `false` depending on the outcome.

```java
AdjustAdobeExtensionConfig config = new AdjustAdobeExtensionConfig(environment);

config.setOnDeferredDeeplinkResponseListener(new OnDeferredDeeplinkResponseListener() {
    @Override
    public boolean launchReceivedDeeplink(Uri deeplink) {
        if (shouldAdjustSdkLaunchTheDeeplink(deeplink)) {
            return true;
        } else {
            return false;
        }
    }
});

AdjustAdobeExtension.setConfiguration(config);
```
