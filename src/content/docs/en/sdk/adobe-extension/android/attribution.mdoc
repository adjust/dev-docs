---
title: Set up an attribution callback
description: Set up an attribution callback to respond to attribution changes.
sidebar-position: 5
---

When Adjust receives install data from the Adjust Android Extension for Adobe Experience SDK, the device is attributed to the source of the install. This attribution information can change if the user is retargeted or interacts with another campaign.

You can configure a callback function to respond to attribution changes. When Adjust receives new attribution information, it sends the data asynchronously back to the device. The callback function receives the device's attribution data as an argument.

See Adjust's [attribution data policies](https://github.com/adjust/sdks/blob/master/doc/attribution-data.md) for more information about attribution data.

## Reference {% #reference %}

To set a callback function to listen for attribution changes, call the `setOnAttributionChangedListener` method of your `AdjustAdobeExtensionConfig` instance with the following argument:

{% deflist %}
`onAttributionChangedListener`: `OnAttributionChangedListener`

: A function that returns `void` and receives device attribution information as a serialized JSON object.
{% /deflist %}

```java
AdjustAdobeExtensionConfig config = new AdjustAdobeExtensionConfig(environment);

config.setOnAttributionChangedListener(new OnAttributionChangedListener() {
    @Override
    public void onAttributionChanged(AdjustAttribution attribution) {}
});

AdjustAdobeExtension.setConfiguration(config);
```

## Example: An attribution callback function {% #example-attribution-callback-function %}

This code sample demonstrates how to configure a callback function that logs an update in attribution information.

To set up this function, follow these steps:

1. Create a new `AdjustAdobeExtensionConfig` instance.
2. Call the `setOnAttributionChangedListener` with an `OnAttributionChangedListener` instance as an argument.
3. Create a new `void` function with an `AdjustAttribution` parameter.
4. Log out the attribution by casting it as a `String`.
5. Initialize the extension: Call `AdjustAdobeExtension.setConfiguration` with your `AdjustAdobeExtensionConfig` instance as an argument.

```java
AdjustAdobeExtensionConfig config = new AdjustAdobeExtensionConfig(environment);

config.setOnAttributionChangedListener(new OnAttributionChangedListener() {
    @Override
    public void onAttributionChanged(AdjustAttribution attribution) {
        Log.d("example", "Attribution information updated");
        Log.d("example", "Attribution: " + attribution.toString());
    }
});

AdjustAdobeExtension.setConfiguration(config);
```
