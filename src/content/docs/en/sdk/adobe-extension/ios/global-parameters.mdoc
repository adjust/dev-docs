---
title: Set up global callback and partner parameters
description: Send information to your callback URL and to network partners with each session.
sidebar-label: Set up global parameters
sidebar-position: 7
---

The Adjust Android Extension for Adobe Experience SDK enables you to send additional information to Adjust to forward to your callback URL and network partners. Global parameters are string key-value pairs that you can use to communicate more information about a device or user.

## Global callback parameters {% #global-callback-parameters %}

If you [register a callback URL](https://help.adjust.com/en/article/recommended-placeholders-callbacks) in the Adjust dashboard, Adjust sends a `GET` request to your callback URL when the SDK sends session data. To append parameters to this callback request, set the global parameters in your code.

#### Reference {% #global-callback-parameters-reference %}

The `Adjust` class methods manage the global callback parameters. You can add and remove individual parameters, or reset all parameters at once.

### Add a global callback parameter {% #add-global-callback-parameter %}

To add a global callback parameter, call the `addGlobalCallbackParameter` method with the following arguments:

{% deflist %}
`key`: `NSString`

: The parameter key.

`value`: `NSString`

: The parameter value.
{% /deflist %}

You can add multiple parameters by calling the `addGlobalCallbackParameter` method multiple times.

{% tabs %}
{% tab title="Swift" sync="swift" %}
```swift
Adjust.addGlobalCallbackParameter("value", forKey: "key")
Adjust.addGlobalCallbackParameter("855", forKey: "user_id")
```
{% /tab %}

{% tab title="Objective-C" sync="objc" %}
```objc
[Adjust addGlobalCallbackParameter:@"value" forKey:@"key"];
[Adjust addGlobalCallbackParameter:@"855" forKey:@"user_id"];
```
{% /tab %}
{% /tabs %}

### Remove a global callback parameter {% #remove-global-callback-parameter %}

To remove a global callback parameter, call the `removeGlobalCallbackParameter` method with the following argument:

{% deflist %}
`key`: `NSString`

: The key of the parameter you want to remove.
{% /deflist %}

{% tabs %}
{% tab title="Swift" sync="swift" %}
```swift
Adjust.removeGlobalCallbackParameter(forkey: "key")
```
{% /tab %}

{% tab title="Objective-C" sync="objc" %}
```objc
[Adjust removeGlobalCallbackParameterForKey:@"key"];
```
{% /tab %}
{% /tabs %}

### Remove all global callback parameters {% #remove-all-global-callback-parameter %}

To remove all global callback parameters at once, call the `removeGlobalCallbackParameters` method.

This method removes all active global callback parameters, meaning you won't receive any parameters in callbacks from Adjust.

{% tabs %}
{% tab title="Swift" sync="swift" %}
```swift
Adjust.removeGlobalCallbackParameters()
```
{% /tab %}

{% tab title="Objective-C" sync="objc" %}
```objc
[Adjust removeGlobalCallbackParameters];
```
{% /tab %}
{% /tabs %}

## Global partner parameters {% #global-partner-parameters %}

You can send extra information to your network partners by adding partner parameters. Sharing additional parameters with your external partners enables more granular analysis and facilitates retargeting.

When the Adjust iOS Extension for Adobe Experience SDK sends session data, Adjust's servers forward any global partner parameters to any partners you've configured.

Read [choose data sharing options](https://help.adjust.com/en/article/data-sharing-ad-network) to learn how to configure what data you share with external partners.

#### Reference {% #global-partner-parameters-reference %}

The `Adjust` class methods manage the global partner parameters. You can add and remove individual parameters, or reset all parameters at once.

### Add a global partner parameter {% #add-global-partner-parameter %}

To add a global partner parameter, call the `Adjust.addGlobalPartnerParameter` method with the following arguments:

{% deflist %}
`key`: `NSString`

: The parameter key.

`value`: `NSString`

: The parameter value.
{% /deflist %}

You can add multiple parameters by calling the `Adjust.addGlobalPartnerParameter` method multiple times.

{% tabs %}
{% tab title="Swift" sync="swift" %}
```swift
Adjust.addGlobalPartnerParameter("value", forKey: "key")
Adjust.addGlobalPartnerParameter("855", forKey: "user_id")
```
{% /tab %}

{% tab title="Objective-C" sync="objc" %}
```objc
[Adjust addGlobalPartnerParameter:@"value" forKey:@"key"];
[Adjust addGlobalPartnerParameter:@"855" forKey:@"user_id"];
```
{% /tab %}
{% /tabs %}

### Remove a global partner parameter {% #remove-global-partner-parameter %}

To remove a global partner parameter, call the `Adjust.removeGlobalPartnerParameter` method with the following argument:

{% deflist %}
`key`: `NSString`

: The key of the parameter you want to remove.
{% /deflist %}

{% tabs %}
{% tab title="Swift" sync="swift" %}
```swift
Adjust.removeGlobalPartnerParameter(forkey: "key")
```
{% /tab %}

{% tab title="Objective-C" sync="objc" %}
```objc
[Adjust removeGlobalPartnerParameterForKey:@"key"];
```
{% /tab %}
{% /tabs %}

### Remove all global partner parameters {% #remove-all-global-partner-parameter %}

To remove all global partner parameters at once, call the `Adjust.removeGlobalPartnerParameters` method.

This method removes all active global partner parameters, meaning no parameters will be sent to network partners.

{% tabs %}
{% tab title="Swift" sync="swift" %}
```swift
Adjust.removeGlobalPartnerParameters()
```
{% /tab %}

{% tab title="Objective-C" sync="objc" %}
```objc
[Adjust removeGlobalPartnerParameters];
```
{% /tab %}
{% /tabs %}

## Tutorial: Add global parameters {% #tutorial %}

You can change your global callback and partner parameters at any time by calling the methods described on this page. If you followed the [integration guide](/en/sdk/adobe-extension/ios/integration), your View Controller should look something like this:

{% tabs %}
{% tab title="Swift" sync="swift" %}
```swift
// ViewController.swift
import AEPCore
import AdjustAdobeExtension

class ViewController: UIViewController {

   override func viewDidLoad() {
      super.viewDidLoad()
   }
}
```
{% /tab %}

{% tab title="Objective-C" sync="objc" %}
```objc
// ViewController.m
#import "ViewController.h"
@import AEPCore;
#import <AdjustAdobeExtension/AdjustAdobeExtension.h>

@implementation ViewController

- (void)viewDidLoad {
   [super viewDidLoad];
}

@end
```
{% /tab %}
{% /tabs %}

Add some global parameters and global partner parameters to send them to Adjust with each session.

{% tabs %}
{% tab title="Swift" sync="swift" %}
```swift
// ViewController.swift
import AEPCore
import AdjustAdobeExtension

class ViewController: UIViewController {

   override func viewDidLoad() {
      super.viewDidLoad()

      Adjust.addGlobalCallbackParameter("value", forKey: "key")
      Adjust.addGlobalCallbackParameter("855", forKey: "user_id")

      Adjust.addGlobalPartnerParameter("value", forKey: "key")
      Adjust.addGlobalPartnerParameter("855", forKey: "user_id")
   }
}
```
{% /tab %}

{% tab title="Objective-C" sync="objc" %}
```objc
// ViewController.m
#import "ViewController.h"
@import AEPCore;
#import <AdjustAdobeExtension/AdjustAdobeExtension.h>

@implementation ViewController

- (void)viewDidLoad {
   [super viewDidLoad];

   [Adjust addGlobalCallbackParameter:@"value" forKey:@"key"];
   [Adjust addGlobalCallbackParameter:@"855" forKey:@"user_id"];

   [Adjust addGlobalPartnerParameter:@"value" forKey:@"key"];
   [Adjust addGlobalPartnerParameter:@"855" forKey:@"user_id"];
}

@end
```
{% /tab %}
{% /tabs %}
