---
title: MAUI SDK integration guide
description: Use the MAUI SDK to access Adjust's features in your MAUI mobile apps
sidebar-label: MAUI SDK
sidebar-position: 12
type: category
---

The Adjust MAUI SDK enables you to record attribution, events, and more in your MAUI app. Follow the steps in this guide to set up your app to work with the Adjust SDK.

## Before you begin {% #before-you-begin %}

Here's what you need to know before you get started:
- The Adjust SDK targets the `net8.0-android` and `net8.0-ios` frameworks.

## 1. Get the Adjust SDK {% #get-the-adjust-sdk %}

To install the Adjust SDK, the most straightforward method is to use the Nuget package manager.
It should also be possible to add the Adjust SDK as a project reference or by adding the DLL references directly.

### Install Nuget package {% #install-nuget-package %}

There are different ways to install packages using Nuget, depending on your environment and preferences.
From [Package Manager UI]() to [Package Manager Console]() and [Dotnet CLI]() or through [VS code](), you can choose the method that suits you best.
What they all have in common is the unique identifier of the Adjust MAUI SDK which is:
- `AdjustSdk.MAUI`

Use the Nuget package manager to install the Adjust MAUI SDK into your app.

Once installed, it should look like this in your project file:

```xml
<PackageReference Include="AdjustSdk.MAUI" Version="5.0.0" />
```

## 2. Integrate the SDK {% #integrate-the-sdk %}

### Android

#### Entry point

MAUI's Android entry point is the `MauiApplication` which is usually located at `Platforms/Android/MainApplication.cs`.
There you can override the Android equivalent [`void OnCreate()`](en/sdk/android##integrate-the-adjust-sdk) to [configure the adjust sdk](en/sdk/maui/configuration)

#### Add Google Play Services {% #add-google-play-services %}

Apps that target the Google Play Store must use the gps_adid (Google Advertising ID) to identify devices. You need to add the `play-services-ads-identifier` AAR to your project to access the `gps_adid`.

Following the same procedure used to integrate the adjust SDK through nuget used [here](),
install the [Microsoft package](https://www.nuget.org/packages/Xamarin.GooglePlayServices.Ads.Identifier) for the corresponding bindings with the
identifier `Xamarin.GooglePlayServices.Ads.Identifier`.

Once installed, it should look like this in your project file:

```xml
<PackageReference Include="Xamarin.GooglePlayServices.Ads.Identifier" Version="118.2.0.1" />
```

#### Collect App Set Identifier {% #collect-app-set-identifier %}

The [App Set Identifier](https://developer.android.com/design-for-safety/privacy-sandbox/reference/adservices/appsetid/AppSetId) is a unique identifier that enables you to measure information from any of your apps that a user has installed on their device. All apps by the same developer share the same App Set ID, meaning you can gather meaningful insights from users across all your apps.

Following the same procedure used to integrate the adjust SDK through nuget used [here](),
install the [Microsoft package](https://www.nuget.org/packages/Xamarin.GooglePlayServices.AppSet) for the corresponding bindings with the
identifier `Xamarin.GooglePlayServices.AppSet`.

Once installed, it should look like this in your project file:

```xml
<PackageReference Include="Xamarin.GooglePlayServices.AppSet" Version="116.1.0.4" />
```

#### Set up install referrer

The install referrer is a unique identifier which you can use to attribute an app install to a source. The Adjust SDK requires this information to perform attribution. There can gather this information using the [Google Play Referrer API](https://developer.android.com/google/play/installreferrer).

Following the same procedure used to integrate the adjust SDK through nuget used [here](),
install the [Microsoft package](https://www.nuget.org/packages/Xamarin.Google.Android.InstallReferrer) for the corresponding bindings with the
identifier `Xamarin.Google.Android.InstallReferrer`.

Once installed, it should look like this in your project file:

```xml
<PackageReference Include="Xamarin.Google.Android.InstallReferrer" Version="2.2.0.2" />
```

#### Permissions

Usually located in your project at `Platforms/Android/AndroidManifest.xml`, you can add permissions by adding
an `<uses-permission android:name="{permission id}"/>` tags to the `<manifest>` section.

There are the following permissions to access Android features:

- `android.permission.INTERNET`: Required to connect to the internet.
- `android.permission.ACCESS_NETWORK_STATE`: Required to read the type of network the device is connected to.
- `com.android.finsky.permission.BIND_GET_INSTALL_REFERRER_SERVICE` it has been deprecated, but it was required to fetch install referrer information via Google Play Store intent.
- `com.google.android.gms.permission.AD_ID`: Required to read the device advertising ID on Android 12 (API level 31) and above. See [Google's `AdvertisingIdClient.info` documentation](https://developers.google.com/android/reference/com/google/android/gms/ads/identifier/AdvertisingIdClient.Info#public-string-getid) for more information.

#### Proguard

If you're using Proguard to optimize your app, you must add rules to prevent Proguard from removing classes.

```java
-keep class com.adjust.sdk.** { *; }
-keep class com.google.android.gms.common.ConnectionResult {
   int SUCCESS;
}
-keep class com.google.android.gms.ads.identifier.AdvertisingIdClient {
   com.google.android.gms.ads.identifier.AdvertisingIdClient$Info getAdvertisingIdInfo(android.content.Context);
}
-keep class com.google.android.gms.ads.identifier.AdvertisingIdClient$Info {
   java.lang.String getId();
   boolean isLimitAdTrackingEnabled();
}
-keep public class com.android.installreferrer.** { *; }
```

If you're not publishing your app in the Google Play Store, add the following rule:

```java
-keep public class com.adjust.sdk.** { *; }
```

### iOS

#### Entry point

MAUI's iOa entry point is the `MauiUIApplicationDelegate` which is usually located at `Platforms/iOS/AppDelegate.cs`.
There you can override the iOs equivalent [`bool FinishedLaunching(UIApplication application, NSDictionary launchOptions)`](en/sdk/ios#integrate-the-adjust-sdk) to [configure the adjust sdk](en/sdk/maui/configuration)
