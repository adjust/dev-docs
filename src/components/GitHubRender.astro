---
// This component fetches method signature code from the GitHub API
// The resulting code is presented in a Code block

import { Code } from "astro/components";
import { getInfoFromUrl } from "@components/utils/getInfoFromUrl";
import { getLines } from "@components/utils/getLines.ts";
import { fetchGithubContent } from "@components/utils/fetchGithubContent";
import type { Lang } from "shiki";

// This component takes a GitHub permalink URL and the method language as arguments
// The language is used to highlight the code block correctly

export interface Props {
  link: URL;
  lang: Lang;
}

const { link, lang } = Astro.props as Props;

// Throw meaningful errors if either prop isn't present

if (!lang) {
  throw new Error("Missing prop `lang` on `<Function>` component.");
}

if (!link) {
  throw new Error("Missing prop `link` on `<Function>` component.");
}

// This component alters the URL to fetch data from the API rather than scraping the HTML
// To do this, we convert the URL to a string

const stringLink = link.toString();

// Check that the link is actually a GitHub link. If not, throw an error.

if (!stringLink.includes("https://github.com")) {
  throw new Error("Link in `<Function>` component isn't a Github link");
}

// Parse the useful information from the stringified URL

const params = getInfoFromUrl(stringLink);

// Fetch the information from the GitHub API

const content = await fetchGithubContent(
  params
);

// Remove any newlines from the resulting code

const responseContent = content.split("\n");

// Return only the values at the specified ranges

const snippet = getLines(responseContent, params.range)!;
---

<!--Return a syntax highlighted code block containing the lines of code-->
<Code code={snippet} lang={lang} />
