---
import { Banner } from "@adjust/components";
import { toSentenceCase } from "@components/utils/convertCase";

// We have two props that must be present in all banners:
// The type indicates the purpose and style of the banner
// The title is the header that is applied to the banner
// These are both optional as we provide default values below

export interface Props {
  type?: string;
}

// This map iterates through the different banner types the author might specify and maps them to a `BannerKind`
// If the type is not present in this list, it will default to `neutral` below.

const typeMap = new Map<String, BannerKind>([
  ["info", "neutral"],
  ["note", "primary"],
  ["tip", "positive"],
  ["seealso", "positive"],
  ["important", "warning"],
  ["warning", "negative"],
]);

// Declare properties used to build the banner.
// The type is declared as "neutral" in case no type is provided.
// If the author provides a type, it overrides this default.

const { type = "neutral" } = Astro.props as Props;

// Iterate through the map and assign the type provided by the author to a BannerKind
// If no type is found, default to "neutral"

const bannerType: BannerKind = typeMap.get(type) || "neutral";

// Create a placeholder title that is title cased.
// This takes the value of the type and capitalizes the first letter.
// If no type has been specified, default to "Info".

const typeTitle = type === "neutral" ? "Info" : toSentenceCase(type);

// Store the content contained within the Callout as a string.
// This string is converted to HTML inside the atlas/BuildBanner.jsx file.

let content = "";
let title = "";
const titleRegex = /<h3 .*>(.*?)<\/h3>/;

if (Astro.slots.has("default")) {
  content = await Astro.slots.render("default");
  let headerTitle = content.match(titleRegex);
  if (headerTitle) {
    title = headerTitle[1];
    content = content.replace(headerTitle[1], "");
  }
}
---

<!-- Pass the assigned information to the BuildBanner React component -->
<Banner client:only="react" title={title ? title : typeTitle} kind={bannerType}>
  <Fragment set:html={content} slot="description" />
</Banner>
