---
import type { MarkdownHeading } from "astro";
import classNames from "classnames";

import RightSidebar from "@components/RightSidebar/RightSidebar.astro";
import type { NavigationData } from "@utils/helpers/navigation/types";
import CategoryCard from "@components/Cards/CategoryCard.astro";

import "./article.css";

type Props = {
  title: string;
  headings: MarkdownHeading[];
  childLinks: NavigationData["childLinks"];
};

const { title, headings, childLinks } = Astro.props;
---

<article id="article" class="article-main w-full">
  <section class="main-section">
    <h1 class="text-heading-1 font-bold leading-[1] mb-4" id="overview">
      {title}
    </h1>
    <aside title="Table of Contents">
      <RightSidebar headings={headings} title={title} />
    </aside>
    <div
      class={classNames({ "article-content": !childLinks.length })}
      id="article-content"
    >
      <slot />
      <!-- Category cards for the entry with "category" type and childs -->
      {
        childLinks.length ? (
          <div class="article-categories w-full flex flex-wrap gap-x-2 gap-y-4">
            {childLinks.map((child) => (
              <CategoryCard child={child} />
            ))}
          </div>
        ) : null
      }
    </div>
  </section>
</article>
