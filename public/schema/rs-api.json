{
  "openapi": "3.1.0",
  "info": {
    "title": "Automate: Reports service",
    "description": "This is an OpenAPI schema definition for Adjust Automate",
    "version": "1.0.0"
  },
  "servers": [
    { "url": "https://automate.adjust.com/reports-service" },
    {
      "url": "https://suite.adjust.com/reports-service",
      "description": "Deprecated"
    },
    {
      "url": "https://dash.adjust.com/control-center/reports-service",
      "description": "Deprecated"
    }
  ],
  "paths": {
    "/report": {
      "get": {
        "tags": ["Client-facing endpoints"],
        "summary": "Report",
        "operationId": "report_report_get",
        "parameters": [
          {
            "name": "dimensions",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Comma-separated list of dimensions",
              "examples": ["network,campaign,adgroup"],
              "title": "Dimensions"
            },
            "description": "Comma-separated list of dimensions"
          },
          {
            "name": "metrics",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Comma-separated list of metrics",
              "examples": ["installs,cost,roas_d7"],
              "title": "Metrics"
            },
            "description": "Comma-separated list of metrics"
          },
          {
            "name": "utc_offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "UTC offset for timezones. [+-]HH:MM format<br>https://help.adjust.com/en/article/overview-metrics-endpoints#parameters-1",
              "examples": ["+01:00"],
              "title": "Utc Offset"
            },
            "description": "UTC offset for timezones. [+-]HH:MM format<br>https://help.adjust.com/en/article/overview-metrics-endpoints#parameters-1"
          },
          {
            "name": "date_period",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Start and end dates for the report, 3 supported formats:<br>Logical dates: yesterday<br>Absolute dates: 2020-01-31:2021-01-01<br>Relative dates: -10d:-3d",
              "examples": ["-6d:-0d"],
              "title": "Date Period"
            },
            "description": "Start and end dates for the report, 3 supported formats:<br>Logical dates: yesterday<br>Absolute dates: 2020-01-31:2021-01-01<br>Relative dates: -10d:-3d"
          },
          {
            "name": "cohort_maturity",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "$ref": "#/components/schemas/CohortMaturity" },
                { "type": "null" }
              ],
              "description": "Cohort maturity mode",
              "examples": ["immature"],
              "default": "immature",
              "title": "Cohort Maturity"
            },
            "description": "Cohort maturity mode"
          },
          {
            "name": "attribution_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "$ref": "#/components/schemas/AttributionType" },
                { "type": "null" }
              ],
              "description": "Attribution type: click, impression, or click and impression combined.",
              "examples": ["impression"],
              "default": "click",
              "title": "Attribution Type"
            },
            "description": "Attribution type: click, impression, or click and impression combined."
          },
          {
            "name": "assisting_attribution_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "$ref": "#/components/schemas/AttributionType" },
                { "type": "null" }
              ],
              "description": "Assisting attribution type: click, impression, or click and impression combined.",
              "examples": ["impression"],
              "default": "all",
              "title": "Assisting Attribution Type"
            },
            "description": "Assisting attribution type: click, impression, or click and impression combined."
          },
          {
            "name": "attribution_source",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "$ref": "#/components/schemas/AttributionSource" },
                { "type": "null" }
              ],
              "description": "Determines whether in-app activity is assigned to the user’s install source (first) or divided among the install source and subsequent sources of reattribution (dynamic)",
              "examples": ["first"],
              "default": "dynamic",
              "title": "Attribution Source"
            },
            "description": "Determines whether in-app activity is assigned to the user’s install source (first) or divided among the install source and subsequent sources of reattribution (dynamic)"
          },
          {
            "name": "reattributed",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "$ref": "#/components/schemas/AttributionStatus" },
                { "type": "null" }
              ],
              "description": "Filter KPIs by installed or reattributed users only or by all users",
              "examples": ["all"],
              "default": "all",
              "title": "Reattributed"
            },
            "description": "Filter KPIs by installed or reattributed users only or by all users"
          },
          {
            "name": "iap_revenue_mode",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "$ref": "#/components/schemas/IAPRevenueModeOption" },
                { "type": "null" }
              ],
              "description": "Select the percentage which will be applied to IAP Revenue",
              "examples": ["GROSS_70"],
              "title": "Iap Revenue Mode"
            },
            "description": "Select the percentage which will be applied to IAP Revenue"
          },
          {
            "name": "ad_revenue_sources",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "$ref": "#/components/schemas/AdRevenueSourceName" },
                { "type": "null" }
              ],
              "description": "Comma-separated list of Ad Revenue sources",
              "examples": ["unknown"],
              "title": "Ad Revenue Sources"
            },
            "description": "Comma-separated list of Ad Revenue sources"
          },
          {
            "name": "os_names",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "$ref": "#/components/schemas/OSName" },
                { "type": "null" }
              ],
              "description": "Comma-separated list of os names.",
              "examples": ["ios"],
              "title": "Os Names"
            },
            "description": "Comma-separated list of os names."
          },
          {
            "name": "ad_spend_mode",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "$ref": "#/components/schemas/AdSpendMode" },
                { "type": "null" }
              ],
              "description": "If set to \"adjust\", formulas will be calculated with adjust ad spend data, else with ad spend metrics.",
              "examples": ["network"],
              "default": "adjust",
              "title": "Ad Spend Mode"
            },
            "description": "If set to \"adjust\", formulas will be calculated with adjust ad spend data, else with ad spend metrics."
          },
          {
            "name": "sandbox",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "description": "Sandbox report<br>https://help.adjust.com/resources/kpi-service#overview-query-parameters",
              "examples": ["false"],
              "default": false,
              "title": "Sandbox"
            },
            "description": "Sandbox report<br>https://help.adjust.com/resources/kpi-service#overview-query-parameters"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Comma-separated list of metric/dimension used to sort the report. Use - to order descending",
              "examples": ["-clicks,installs"],
              "title": "Sort"
            },
            "description": "Comma-separated list of metric/dimension used to sort the report. Use - to order descending"
          },
          {
            "name": "index",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Comma-separated list of dimensions",
              "examples": ["network,campaign,adgroup"],
              "title": "Index"
            },
            "description": "Comma-separated list of dimensions"
          },
          {
            "name": "format_dates",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "If set to false, all date dimensions will be in ISO format",
              "examples": ["false"],
              "default": true,
              "title": "Format Dates"
            },
            "description": "If set to false, all date dimensions will be in ISO format"
          },
          {
            "name": "period_over_period",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "Start date of the period for comparing. Could be a relative date or an absolute in ISO format",
              "examples": ["-1d"],
              "title": "Period Over Period"
            },
            "description": "Start date of the period for comparing. Could be a relative date or an absolute in ISO format"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit of report rows",
              "examples": [33],
              "title": "Limit"
            },
            "description": "Limit of report rows"
          },
          {
            "name": "currency",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "Currency for conversion of money related metrics",
              "examples": ["USD"],
              "title": "Currency"
            },
            "description": "Currency for conversion of money related metrics"
          },
          {
            "name": "include_attr_dependency",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "If set to false, the response will not include \"attr_dependency\" field for the rows",
              "examples": ["false"],
              "default": true,
              "title": "Include Attr Dependency"
            },
            "description": "If set to false, the response will not include \"attr_dependency\" field for the rows"
          },
          {
            "name": "dimension__in",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Dimension  In"
            }
          },
          {
            "name": "dimension__not_in",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Dimension  Not In"
            }
          },
          {
            "name": "dimension__contains",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Dimension  Contains"
            }
          },
          {
            "name": "dimension__exclude",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Dimension  Exclude"
            }
          },
          {
            "name": "dimension__starts_with",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Dimension  Starts With"
            }
          },
          {
            "name": "dimension__not_starts_with",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Dimension  Not Starts With"
            }
          },
          {
            "name": "dimension__ends_with",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Dimension  Ends With"
            }
          },
          {
            "name": "dimension__not_ends_with",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Dimension  Not Ends With"
            }
          },
          {
            "name": "hour__between",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Hour  Between"
            }
          },
          {
            "name": "metric__lt",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Metric  Lt"
            }
          },
          {
            "name": "metric__lte",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Metric  Lte"
            }
          },
          {
            "name": "metric__gt",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Metric  Gt"
            }
          },
          {
            "name": "metric__gte",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Metric  Gte"
            }
          },
          {
            "name": "metric__eq",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Metric  Eq"
            }
          },
          {
            "name": "metric__ne",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Metric  Ne"
            }
          },
          {
            "name": "X-Source",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "X-Source header, it indicates the source of the request",
              "default": "API",
              "title": "X-Source"
            },
            "description": "X-Source header, it indicates the source of the request"
          },
          {
            "name": "X-Referer",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "X-Referer header, it indicates the referrer of the request",
              "title": "X-Referer"
            },
            "description": "X-Referer header, it indicates the referrer of the request"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Adjust token using Authorization header method",
              "examples": ["Bearer {{adjust_auth_token}}"],
              "title": "Authorization"
            },
            "description": "Adjust token using Authorization header method"
          },
          {
            "name": "_production_adjust_session",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Adjust Dashboard cookie session.",
              "examples": ["{{cookie}}"],
              "title": " Production Adjust Session"
            },
            "description": "Adjust Dashboard cookie session."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ReportResponseModel" }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponseModel" }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponseModel" }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponseModel" }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponseModel" }
              }
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/pivot_report": {
      "get": {
        "tags": ["Client-facing endpoints"],
        "summary": "Pivot Report",
        "operationId": "pivot_report_pivot_report_get",
        "parameters": [
          {
            "name": "dimensions",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Comma-separated list of dimensions",
              "examples": ["network,campaign,adgroup"],
              "title": "Dimensions"
            },
            "description": "Comma-separated list of dimensions"
          },
          {
            "name": "metrics",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Comma-separated list of metrics",
              "examples": ["installs,cost,roas_d7"],
              "title": "Metrics"
            },
            "description": "Comma-separated list of metrics"
          },
          {
            "name": "utc_offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "UTC offset for timezones. [+-]HH:MM format<br>https://help.adjust.com/en/article/overview-metrics-endpoints#parameters-1",
              "examples": ["+01:00"],
              "title": "Utc Offset"
            },
            "description": "UTC offset for timezones. [+-]HH:MM format<br>https://help.adjust.com/en/article/overview-metrics-endpoints#parameters-1"
          },
          {
            "name": "date_period",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Start and end dates for the report, 3 supported formats:<br>Logical dates: yesterday<br>Absolute dates: 2020-01-31:2021-01-01<br>Relative dates: -10d:-3d",
              "examples": ["-6d:-0d"],
              "title": "Date Period"
            },
            "description": "Start and end dates for the report, 3 supported formats:<br>Logical dates: yesterday<br>Absolute dates: 2020-01-31:2021-01-01<br>Relative dates: -10d:-3d"
          },
          {
            "name": "cohort_maturity",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "$ref": "#/components/schemas/CohortMaturity" },
                { "type": "null" }
              ],
              "description": "Cohort maturity mode",
              "examples": ["immature"],
              "default": "immature",
              "title": "Cohort Maturity"
            },
            "description": "Cohort maturity mode"
          },
          {
            "name": "attribution_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "$ref": "#/components/schemas/AttributionType" },
                { "type": "null" }
              ],
              "description": "Attribution type: click, impression, or click and impression combined.",
              "examples": ["impression"],
              "default": "click",
              "title": "Attribution Type"
            },
            "description": "Attribution type: click, impression, or click and impression combined."
          },
          {
            "name": "assisting_attribution_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "$ref": "#/components/schemas/AttributionType" },
                { "type": "null" }
              ],
              "description": "Assisting attribution type: click, impression, or click and impression combined.",
              "examples": ["impression"],
              "default": "all",
              "title": "Assisting Attribution Type"
            },
            "description": "Assisting attribution type: click, impression, or click and impression combined."
          },
          {
            "name": "attribution_source",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "$ref": "#/components/schemas/AttributionSource" },
                { "type": "null" }
              ],
              "description": "Determines whether in-app activity is assigned to the user’s install source (first) or divided among the install source and subsequent sources of reattribution (dynamic)",
              "examples": ["first"],
              "default": "dynamic",
              "title": "Attribution Source"
            },
            "description": "Determines whether in-app activity is assigned to the user’s install source (first) or divided among the install source and subsequent sources of reattribution (dynamic)"
          },
          {
            "name": "reattributed",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "$ref": "#/components/schemas/AttributionStatus" },
                { "type": "null" }
              ],
              "description": "Filter KPIs by installed or reattributed users only or by all users",
              "examples": ["all"],
              "default": "all",
              "title": "Reattributed"
            },
            "description": "Filter KPIs by installed or reattributed users only or by all users"
          },
          {
            "name": "iap_revenue_mode",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "$ref": "#/components/schemas/IAPRevenueModeOption" },
                { "type": "null" }
              ],
              "description": "Select the percentage which will be applied to IAP Revenue",
              "examples": ["GROSS_70"],
              "title": "Iap Revenue Mode"
            },
            "description": "Select the percentage which will be applied to IAP Revenue"
          },
          {
            "name": "ad_revenue_sources",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "$ref": "#/components/schemas/AdRevenueSourceName" },
                { "type": "null" }
              ],
              "description": "Comma-separated list of Ad Revenue sources",
              "examples": ["unknown"],
              "title": "Ad Revenue Sources"
            },
            "description": "Comma-separated list of Ad Revenue sources"
          },
          {
            "name": "os_names",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "$ref": "#/components/schemas/OSName" },
                { "type": "null" }
              ],
              "description": "Comma-separated list of os names.",
              "examples": ["ios"],
              "title": "Os Names"
            },
            "description": "Comma-separated list of os names."
          },
          {
            "name": "ad_spend_mode",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "$ref": "#/components/schemas/AdSpendMode" },
                { "type": "null" }
              ],
              "description": "If set to \"adjust\", formulas will be calculated with adjust ad spend data, else with ad spend metrics.",
              "examples": ["network"],
              "default": "adjust",
              "title": "Ad Spend Mode"
            },
            "description": "If set to \"adjust\", formulas will be calculated with adjust ad spend data, else with ad spend metrics."
          },
          {
            "name": "sandbox",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "description": "Sandbox report<br>https://help.adjust.com/resources/kpi-service#overview-query-parameters",
              "examples": ["false"],
              "default": false,
              "title": "Sandbox"
            },
            "description": "Sandbox report<br>https://help.adjust.com/resources/kpi-service#overview-query-parameters"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Comma-separated list of metric/dimension used to sort the report. Use - to order descending",
              "examples": ["-clicks,installs"],
              "title": "Sort"
            },
            "description": "Comma-separated list of metric/dimension used to sort the report. Use - to order descending"
          },
          {
            "name": "index",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Comma-separated list of dimensions",
              "examples": ["network,campaign,adgroup"],
              "title": "Index"
            },
            "description": "Comma-separated list of dimensions"
          },
          {
            "name": "format_dates",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "If set to false, all date dimensions will be in ISO format",
              "examples": ["false"],
              "default": true,
              "title": "Format Dates"
            },
            "description": "If set to false, all date dimensions will be in ISO format"
          },
          {
            "name": "period_over_period",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "Start date of the period for comparing. Could be a relative date or an absolute in ISO format",
              "examples": ["-1d"],
              "title": "Period Over Period"
            },
            "description": "Start date of the period for comparing. Could be a relative date or an absolute in ISO format"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit of report rows",
              "examples": [33],
              "title": "Limit"
            },
            "description": "Limit of report rows"
          },
          {
            "name": "currency",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "Currency for conversion of money related metrics",
              "examples": ["USD"],
              "title": "Currency"
            },
            "description": "Currency for conversion of money related metrics"
          },
          {
            "name": "include_attr_dependency",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "If set to false, the response will not include \"attr_dependency\" field for the rows",
              "examples": ["false"],
              "default": true,
              "title": "Include Attr Dependency"
            },
            "description": "If set to false, the response will not include \"attr_dependency\" field for the rows"
          },
          {
            "name": "dimension__in",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Dimension  In"
            }
          },
          {
            "name": "dimension__not_in",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Dimension  Not In"
            }
          },
          {
            "name": "dimension__contains",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Dimension  Contains"
            }
          },
          {
            "name": "dimension__exclude",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Dimension  Exclude"
            }
          },
          {
            "name": "dimension__starts_with",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Dimension  Starts With"
            }
          },
          {
            "name": "dimension__not_starts_with",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Dimension  Not Starts With"
            }
          },
          {
            "name": "dimension__ends_with",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Dimension  Ends With"
            }
          },
          {
            "name": "dimension__not_ends_with",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Dimension  Not Ends With"
            }
          },
          {
            "name": "hour__between",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Hour  Between"
            }
          },
          {
            "name": "metric__lt",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Metric  Lt"
            }
          },
          {
            "name": "metric__lte",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Metric  Lte"
            }
          },
          {
            "name": "metric__gt",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Metric  Gt"
            }
          },
          {
            "name": "metric__gte",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Metric  Gte"
            }
          },
          {
            "name": "metric__eq",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Metric  Eq"
            }
          },
          {
            "name": "metric__ne",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Metric  Ne"
            }
          },
          {
            "name": "X-Source",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "X-Source header, it indicates the source of the request",
              "default": "API",
              "title": "X-Source"
            },
            "description": "X-Source header, it indicates the source of the request"
          },
          {
            "name": "X-Referer",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "X-Referer header, it indicates the referrer of the request",
              "title": "X-Referer"
            },
            "description": "X-Referer header, it indicates the referrer of the request"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Adjust token using Authorization header method",
              "examples": ["Bearer {{adjust_auth_token}}"],
              "title": "Authorization"
            },
            "description": "Adjust token using Authorization header method"
          },
          {
            "name": "_production_adjust_session",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Adjust Dashboard cookie session.",
              "examples": ["{{cookie}}"],
              "title": " Production Adjust Session"
            },
            "description": "Adjust Dashboard cookie session."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PivotReportResponseModel"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponseModel" }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponseModel" }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponseModel" }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponseModel" }
              }
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/csv_report": {
      "get": {
        "tags": ["Client-facing endpoints"],
        "summary": "Csv Report",
        "operationId": "csv_report_csv_report_get",
        "parameters": [
          {
            "name": "dimensions",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Comma-separated list of dimensions",
              "examples": ["network,campaign,adgroup"],
              "title": "Dimensions"
            },
            "description": "Comma-separated list of dimensions"
          },
          {
            "name": "metrics",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Comma-separated list of metrics",
              "examples": ["installs,cost,roas_d7"],
              "title": "Metrics"
            },
            "description": "Comma-separated list of metrics"
          },
          {
            "name": "utc_offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "UTC offset for timezones. [+-]HH:MM format<br>https://help.adjust.com/en/article/overview-metrics-endpoints#parameters-1",
              "examples": ["+01:00"],
              "title": "Utc Offset"
            },
            "description": "UTC offset for timezones. [+-]HH:MM format<br>https://help.adjust.com/en/article/overview-metrics-endpoints#parameters-1"
          },
          {
            "name": "date_period",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Start and end dates for the report, 3 supported formats:<br>Logical dates: yesterday<br>Absolute dates: 2020-01-31:2021-01-01<br>Relative dates: -10d:-3d",
              "examples": ["-6d:-0d"],
              "title": "Date Period"
            },
            "description": "Start and end dates for the report, 3 supported formats:<br>Logical dates: yesterday<br>Absolute dates: 2020-01-31:2021-01-01<br>Relative dates: -10d:-3d"
          },
          {
            "name": "cohort_maturity",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "$ref": "#/components/schemas/CohortMaturity" },
                { "type": "null" }
              ],
              "description": "Cohort maturity mode",
              "examples": ["immature"],
              "default": "immature",
              "title": "Cohort Maturity"
            },
            "description": "Cohort maturity mode"
          },
          {
            "name": "attribution_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "$ref": "#/components/schemas/AttributionType" },
                { "type": "null" }
              ],
              "description": "Attribution type: click, impression, or click and impression combined.",
              "examples": ["impression"],
              "default": "click",
              "title": "Attribution Type"
            },
            "description": "Attribution type: click, impression, or click and impression combined."
          },
          {
            "name": "assisting_attribution_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "$ref": "#/components/schemas/AttributionType" },
                { "type": "null" }
              ],
              "description": "Assisting attribution type: click, impression, or click and impression combined.",
              "examples": ["impression"],
              "default": "all",
              "title": "Assisting Attribution Type"
            },
            "description": "Assisting attribution type: click, impression, or click and impression combined."
          },
          {
            "name": "attribution_source",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "$ref": "#/components/schemas/AttributionSource" },
                { "type": "null" }
              ],
              "description": "Determines whether in-app activity is assigned to the user’s install source (first) or divided among the install source and subsequent sources of reattribution (dynamic)",
              "examples": ["first"],
              "default": "dynamic",
              "title": "Attribution Source"
            },
            "description": "Determines whether in-app activity is assigned to the user’s install source (first) or divided among the install source and subsequent sources of reattribution (dynamic)"
          },
          {
            "name": "reattributed",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "$ref": "#/components/schemas/AttributionStatus" },
                { "type": "null" }
              ],
              "description": "Filter KPIs by installed or reattributed users only or by all users",
              "examples": ["all"],
              "default": "all",
              "title": "Reattributed"
            },
            "description": "Filter KPIs by installed or reattributed users only or by all users"
          },
          {
            "name": "iap_revenue_mode",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "$ref": "#/components/schemas/IAPRevenueModeOption" },
                { "type": "null" }
              ],
              "description": "Select the percentage which will be applied to IAP Revenue",
              "examples": ["GROSS_70"],
              "title": "Iap Revenue Mode"
            },
            "description": "Select the percentage which will be applied to IAP Revenue"
          },
          {
            "name": "ad_revenue_sources",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "$ref": "#/components/schemas/AdRevenueSourceName" },
                { "type": "null" }
              ],
              "description": "Comma-separated list of Ad Revenue sources",
              "examples": ["unknown"],
              "title": "Ad Revenue Sources"
            },
            "description": "Comma-separated list of Ad Revenue sources"
          },
          {
            "name": "os_names",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "$ref": "#/components/schemas/OSName" },
                { "type": "null" }
              ],
              "description": "Comma-separated list of os names.",
              "examples": ["ios"],
              "title": "Os Names"
            },
            "description": "Comma-separated list of os names."
          },
          {
            "name": "ad_spend_mode",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "$ref": "#/components/schemas/AdSpendMode" },
                { "type": "null" }
              ],
              "description": "If set to \"adjust\", formulas will be calculated with adjust ad spend data, else with ad spend metrics.",
              "examples": ["network"],
              "default": "adjust",
              "title": "Ad Spend Mode"
            },
            "description": "If set to \"adjust\", formulas will be calculated with adjust ad spend data, else with ad spend metrics."
          },
          {
            "name": "sandbox",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "description": "Sandbox report<br>https://help.adjust.com/resources/kpi-service#overview-query-parameters",
              "examples": ["false"],
              "default": false,
              "title": "Sandbox"
            },
            "description": "Sandbox report<br>https://help.adjust.com/resources/kpi-service#overview-query-parameters"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Comma-separated list of metric/dimension used to sort the report. Use - to order descending",
              "examples": ["-clicks,installs"],
              "title": "Sort"
            },
            "description": "Comma-separated list of metric/dimension used to sort the report. Use - to order descending"
          },
          {
            "name": "index",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Comma-separated list of dimensions",
              "examples": ["network,campaign,adgroup"],
              "title": "Index"
            },
            "description": "Comma-separated list of dimensions"
          },
          {
            "name": "format_dates",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "If set to false, all date dimensions will be in ISO format",
              "examples": ["false"],
              "default": true,
              "title": "Format Dates"
            },
            "description": "If set to false, all date dimensions will be in ISO format"
          },
          {
            "name": "period_over_period",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "Start date of the period for comparing. Could be a relative date or an absolute in ISO format",
              "examples": ["-1d"],
              "title": "Period Over Period"
            },
            "description": "Start date of the period for comparing. Could be a relative date or an absolute in ISO format"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit of report rows",
              "examples": [33],
              "title": "Limit"
            },
            "description": "Limit of report rows"
          },
          {
            "name": "currency",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "Currency for conversion of money related metrics",
              "examples": ["USD"],
              "title": "Currency"
            },
            "description": "Currency for conversion of money related metrics"
          },
          {
            "name": "include_attr_dependency",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "If set to false, the response will not include \"attr_dependency\" field for the rows",
              "examples": ["false"],
              "default": true,
              "title": "Include Attr Dependency"
            },
            "description": "If set to false, the response will not include \"attr_dependency\" field for the rows"
          },
          {
            "name": "readable_names",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "description": "Set to false if you want to get slugs instead of human-readable names in the header",
              "default": false,
              "title": "Readable Names"
            },
            "description": "Set to false if you want to get slugs instead of human-readable names in the header"
          },
          {
            "name": "dimension__in",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Dimension  In"
            }
          },
          {
            "name": "dimension__not_in",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Dimension  Not In"
            }
          },
          {
            "name": "dimension__contains",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Dimension  Contains"
            }
          },
          {
            "name": "dimension__exclude",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Dimension  Exclude"
            }
          },
          {
            "name": "dimension__starts_with",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Dimension  Starts With"
            }
          },
          {
            "name": "dimension__not_starts_with",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Dimension  Not Starts With"
            }
          },
          {
            "name": "dimension__ends_with",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Dimension  Ends With"
            }
          },
          {
            "name": "dimension__not_ends_with",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Dimension  Not Ends With"
            }
          },
          {
            "name": "hour__between",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Hour  Between"
            }
          },
          {
            "name": "metric__lt",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Metric  Lt"
            }
          },
          {
            "name": "metric__lte",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Metric  Lte"
            }
          },
          {
            "name": "metric__gt",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Metric  Gt"
            }
          },
          {
            "name": "metric__gte",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Metric  Gte"
            }
          },
          {
            "name": "metric__eq",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Metric  Eq"
            }
          },
          {
            "name": "metric__ne",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Metric  Ne"
            }
          },
          {
            "name": "X-Source",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "X-Source header, it indicates the source of the request",
              "default": "API",
              "title": "X-Source"
            },
            "description": "X-Source header, it indicates the source of the request"
          },
          {
            "name": "X-Referer",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "X-Referer header, it indicates the referrer of the request",
              "title": "X-Referer"
            },
            "description": "X-Referer header, it indicates the referrer of the request"
          },
          {
            "name": "X-Config-ID",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "X-Config-ID header",
              "title": "X-Config-Id"
            },
            "description": "X-Config-ID header"
          },
          {
            "name": "X-Export-Run-ID",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "X-Export-Run-ID header",
              "title": "X-Export-Run-Id"
            },
            "description": "X-Export-Run-ID header"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Adjust token using Authorization header method",
              "examples": ["Bearer {{adjust_auth_token}}"],
              "title": "Authorization"
            },
            "description": "Adjust token using Authorization header method"
          },
          {
            "name": "_production_adjust_session",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Adjust Dashboard cookie session.",
              "examples": ["{{cookie}}"],
              "title": " Production Adjust Session"
            },
            "description": "Adjust Dashboard cookie session."
          }
        ],
        "responses": {
          "200": {
            "description": "CSV file",
            "content": { "application/json": { "schema": {} } }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponseModel" }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponseModel" }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponseModel" }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponseModel" }
              }
            },
            "description": "Internal Server Error"
          },
          "204": { "description": "No Content" }
        }
      }
    },
    "/events": {
      "get": {
        "tags": ["Client-facing endpoints"],
        "summary": "Events",
        "operationId": "events_events_get",
        "parameters": [
          {
            "name": "events__contains",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Substring search for events.<br>Looking for exact match in event's key or partial match in its value<br>",
              "examples": ["purchase"],
              "default": "",
              "title": "Events  Contains"
            },
            "description": "Substring search for events.<br>Looking for exact match in event's key or partial match in its value<br>"
          },
          {
            "name": "app_token__in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Comma-separated list of app tokens.<br>Result will contain only events data belonging to the requested apps.<br>",
              "examples": ["token_1,token_2"],
              "default": "",
              "title": "App Token  In"
            },
            "description": "Comma-separated list of app tokens.<br>Result will contain only events data belonging to the requested apps.<br>"
          },
          {
            "name": "tokens_mapping",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "If True, response will contain App token to Event token mapping",
              "default": false,
              "title": "Tokens Mapping"
            },
            "description": "If True, response will contain App token to Event token mapping"
          },
          {
            "name": "X-Source",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "X-Source header, it indicates the source of the request",
              "default": "API",
              "title": "X-Source"
            },
            "description": "X-Source header, it indicates the source of the request"
          },
          {
            "name": "X-Referer",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "X-Referer header, it indicates the referrer of the request",
              "title": "X-Referer"
            },
            "description": "X-Referer header, it indicates the referrer of the request"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Adjust token using Authorization header method",
              "examples": ["Bearer {{adjust_auth_token}}"],
              "title": "Authorization"
            },
            "description": "Adjust token using Authorization header method"
          },
          {
            "name": "_production_adjust_session",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Adjust Dashboard cookie session.",
              "examples": ["{{cookie}}"],
              "title": " Production Adjust Session"
            },
            "description": "Adjust Dashboard cookie session."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/FilterOptionEvent" },
                  "title": "Response Events Events Get"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponseModel" }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponseModel" }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponseModel" }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponseModel" }
              }
            },
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AdRevenueSourceName": {
        "type": "string",
        "enum": [
          "unknown",
          "IronSource",
          "AppLovin Max",
          "MoPub",
          "S2S Ad Revenue",
          "Admost",
          "Admost SDK",
          "AdMob",
          "IronSource SDK",
          "Applovin MAX SDK",
          "Applovin MAX FB only",
          "Facebook SDK",
          "Unity SDK",
          "TopOn",
          "Tapjoy",
          "Helium by Chartboost SDK",
          "Publisher SDK",
          "TopOn SDK",
          "ADX SDK",
          "SDK Tradplus",
          "API Tradplus",
          "Fyber"
        ],
        "title": "AdRevenueSourceName"
      },
      "AdSpendMode": {
        "type": "string",
        "enum": ["adjust", "network", "mixed"],
        "title": "AdSpendMode"
      },
      "AppCurrency": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Name of the currency"
          },
          "code": {
            "type": "string",
            "title": "Code",
            "description": "ISO code for the currency"
          }
        },
        "type": "object",
        "required": ["name", "code"],
        "title": "AppCurrency"
      },
      "AppPlatform": {
        "type": "string",
        "enum": [
          "android",
          "android-tv",
          "apple-tv",
          "bada",
          "blackberry",
          "facebook",
          "fire-tv",
          "ios",
          "linux",
          "macos",
          "nintendo",
          "playstation",
          "roku-os",
          "server",
          "smart-cast",
          "symbian",
          "tizen",
          "web",
          "webos",
          "web-os",
          "windows",
          "windows-phone",
          "xbox"
        ],
        "title": "AppPlatform"
      },
      "AppPlatformModel": {
        "properties": {
          "store_type": {
            "anyOf": [
              { "$ref": "#/components/schemas/StoreType" },
              { "type": "null" }
            ]
          },
          "store_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Store Id"
          },
          "bundle_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Bundle Id"
          },
          "configured": { "type": "boolean", "title": "Configured" },
          "platform": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Platform"
          },
          "app_state": {
            "allOf": [{ "$ref": "#/components/schemas/AppState" }],
            "default": "unknown"
          }
        },
        "type": "object",
        "required": ["configured"],
        "title": "AppPlatformModel"
      },
      "AppState": {
        "type": "string",
        "enum": [
          "not_verified",
          "unknown",
          "verified",
          "verification_requested"
        ],
        "title": "AppState"
      },
      "AttributionSource": {
        "type": "string",
        "enum": ["dynamic", "first"],
        "title": "AttributionSource"
      },
      "AttributionStatus": {
        "type": "string",
        "enum": ["all", "false", "true"],
        "title": "AttributionStatus"
      },
      "AttributionType": {
        "type": "string",
        "enum": ["all", "click", "impression"],
        "title": "AttributionType"
      },
      "Calculatable": {
        "properties": {},
        "type": "object",
        "title": "Calculatable"
      },
      "CohortMaturity": {
        "type": "string",
        "enum": ["mature", "immature", "fully_mature"],
        "title": "CohortMaturity"
      },
      "ColoringMode": {
        "type": "string",
        "enum": ["row", "column", "table", "column_compare"],
        "title": "ColoringMode"
      },
      "Delimiter": {
        "properties": {
          "type": {
            "allOf": [{ "$ref": "#/components/schemas/NodeType" }],
            "default": "delimiter"
          }
        },
        "type": "object",
        "title": "Delimiter"
      },
      "DimensionSpec": {
        "properties": {
          "slug": { "type": "string", "title": "Slug" },
          "navigation": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Navigation"
          },
          "navigations": {
            "anyOf": [
              {
                "items": { "type": "string" },
                "type": "array",
                "uniqueItems": true
              },
              { "type": "null" }
            ],
            "title": "Navigations"
          },
          "name": { "type": "string", "title": "Name" },
          "short_name": { "type": "string", "title": "Short Name" },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          }
        },
        "type": "object",
        "required": ["slug", "name", "short_name"],
        "title": "DimensionSpec"
      },
      "Drilldown": {
        "properties": {
          "spec": {
            "items": { "$ref": "#/components/schemas/DrilldownSpec" },
            "type": "array",
            "title": "Spec"
          },
          "new_dimension": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "New Dimension"
          }
        },
        "type": "object",
        "title": "Drilldown"
      },
      "DrilldownSpec": {
        "properties": {
          "slug": { "type": "string", "title": "Slug" },
          "id": { "type": "string", "title": "Id" },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          },
          "type": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Type"
          },
          "tracker_token": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Tracker Token"
          }
        },
        "type": "object",
        "required": ["slug", "id"],
        "title": "DrilldownSpec"
      },
      "ErrorResponseCode": {
        "type": "string",
        "enum": [
          "request_error",
          "auth_error",
          "validation_error",
          "service_error"
        ],
        "title": "ErrorResponseCode"
      },
      "ErrorResponseModel": {
        "properties": {
          "error_code": { "$ref": "#/components/schemas/ErrorResponseCode" },
          "error_desc": { "type": "string", "title": "Error Desc" },
          "error_desc_details": {
            "anyOf": [
              { "items": { "type": "object" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Error Desc Details"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": ["error_code", "error_desc"],
        "title": "ErrorResponseModel"
      },
      "ExtraDimension": {
        "properties": {
          "slug": { "type": "string", "title": "Slug" },
          "required_permissions": {
            "additionalProperties": {
              "items": { "type": "string" },
              "type": "array"
            },
            "type": "object",
            "title": "Required Permissions"
          }
        },
        "type": "object",
        "required": ["slug"],
        "title": "ExtraDimension"
      },
      "FetchNetworkEntitiesModel": {
        "properties": {
          "data": {
            "additionalProperties": { "type": "object" },
            "type": "object",
            "title": "Data",
            "description": "Key should be a unique ID like row_id or attr_change_id to map results. Value is a dictionary with dimensions and IDs. If you want to get data you should provide dimension partner"
          }
        },
        "type": "object",
        "required": ["data"],
        "title": "FetchNetworkEntitiesModel"
      },
      "FetchTargetingRequestModel": {
        "properties": {
          "data": {
            "additionalProperties": { "type": "object" },
            "type": "object",
            "title": "Data",
            "description": "Key should be a unique ID like row_id or attr_change_id to map results. Value is a targetingIf you want to get data you should provide the partner dimension"
          },
          "adjust_account_id": {
            "type": "integer",
            "title": "Adjust Account Id"
          }
        },
        "type": "object",
        "required": ["data", "adjust_account_id"],
        "title": "FetchTargetingRequestModel"
      },
      "FilterComponent": {
        "type": "string",
        "enum": [
          "select",
          "multiselect",
          "text",
          "combiselect",
          "daterangepicker",
          "radio",
          "draggable_list",
          "section_select"
        ],
        "title": "FilterComponent"
      },
      "FilterGroup": {
        "type": "string",
        "enum": [
          "advanced_settings",
          "attribution",
          "data_sources",
          "environment",
          "filters",
          "legacy_filters",
          "others",
          "other_settings",
          "settings",
          "table",
          "time_period"
        ],
        "title": "FilterGroup"
      },
      "FilterModel": {
        "properties": {
          "name": { "type": "string", "title": "Name" },
          "label": { "type": "string", "title": "Label" },
          "options": {
            "anyOf": [
              { "items": { "type": "string" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Options"
          },
          "options_labels": {
            "anyOf": [
              { "items": { "type": "string" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Options Labels"
          },
          "filter_param": { "type": "string", "title": "Filter Param" },
          "component": { "$ref": "#/components/schemas/FilterComponent" },
          "is_default": {
            "type": "boolean",
            "title": "Is Default",
            "default": false
          },
          "select_options": {
            "anyOf": [
              {
                "items": {
                  "prefixItems": [{ "type": "string" }, { "type": "string" }],
                  "type": "array",
                  "maxItems": 2,
                  "minItems": 2
                },
                "type": "array"
              },
              { "type": "null" }
            ],
            "title": "Select Options"
          },
          "default": { "title": "Default" },
          "combinations_validation": {
            "anyOf": [
              {
                "items": { "items": { "type": "string" }, "type": "array" },
                "type": "array"
              },
              { "type": "null" }
            ],
            "title": "Combinations Validation"
          },
          "combinations_label_template": {
            "anyOf": [
              { "items": { "type": "string" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Combinations Label Template"
          },
          "combinations_value_template": {
            "anyOf": [
              { "items": { "type": "string" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Combinations Value Template"
          },
          "group": {
            "anyOf": [
              { "$ref": "#/components/schemas/FilterGroup" },
              { "type": "null" }
            ],
            "default": "others"
          }
        },
        "type": "object",
        "required": ["name", "label", "filter_param", "component"],
        "title": "FilterModel"
      },
      "FilterOption": {
        "properties": {
          "id": { "type": "string", "title": "Id" },
          "name": { "type": "string", "title": "Name" },
          "short_name": {
            "type": "string",
            "title": "Short Name",
            "default": ""
          },
          "section": {
            "anyOf": [
              { "$ref": "#/components/schemas/Section" },
              { "type": "string" }
            ],
            "title": "Section",
            "default": ""
          },
          "formatting": {
            "anyOf": [
              { "$ref": "#/components/schemas/Formatting" },
              { "type": "null" }
            ]
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "increase_is_negative": {
            "type": "boolean",
            "title": "Increase Is Negative",
            "default": false
          }
        },
        "type": "object",
        "required": ["id", "name"],
        "title": "FilterOption"
      },
      "FilterOptionApp": {
        "properties": {
          "id": { "type": "string", "title": "Id" },
          "name": { "type": "string", "title": "Name" },
          "short_name": {
            "type": "string",
            "title": "Short Name",
            "default": ""
          },
          "section": {
            "anyOf": [
              { "$ref": "#/components/schemas/Section" },
              { "type": "string" }
            ],
            "title": "Section",
            "default": ""
          },
          "formatting": {
            "anyOf": [
              { "$ref": "#/components/schemas/Formatting" },
              { "type": "null" }
            ]
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "increase_is_negative": {
            "type": "boolean",
            "title": "Increase Is Negative",
            "default": false
          },
          "default_store_app_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Default Store App Id"
          },
          "currency": {
            "anyOf": [
              { "$ref": "#/components/schemas/AppCurrency" },
              { "type": "null" }
            ]
          },
          "platforms": {
            "additionalProperties": {
              "$ref": "#/components/schemas/AppPlatformModel"
            },
            "type": "object",
            "title": "Platforms"
          }
        },
        "type": "object",
        "required": ["id", "name"],
        "title": "FilterOptionApp"
      },
      "FilterOptionEvent": {
        "properties": {
          "id": { "type": "string", "title": "Id" },
          "name": { "type": "string", "title": "Name" },
          "short_name": {
            "type": "string",
            "title": "Short Name",
            "default": ""
          },
          "section": {
            "anyOf": [
              { "$ref": "#/components/schemas/Section" },
              { "type": "string" }
            ],
            "title": "Section",
            "default": ""
          },
          "formatting": {
            "anyOf": [
              { "$ref": "#/components/schemas/Formatting" },
              { "type": "null" }
            ]
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "app_token": {
            "items": { "type": "string" },
            "type": "array",
            "title": "App Token"
          },
          "tokens": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Tokens"
          },
          "is_skad_event": { "type": "boolean", "title": "Is Skad Event" },
          "app_token_x_event_tokens_mapping": {
            "anyOf": [
              {
                "additionalProperties": {
                  "items": { "type": "string" },
                  "type": "array"
                },
                "type": "object"
              },
              { "type": "null" }
            ],
            "title": "App Token X Event Tokens Mapping"
          }
        },
        "type": "object",
        "required": ["id", "name", "is_skad_event"],
        "title": "FilterOptionEvent"
      },
      "FilterSource": {
        "type": "string",
        "enum": ["report", "history", "dashboard", "pulse"],
        "title": "FilterSource"
      },
      "Formatting": {
        "type": "string",
        "enum": [
          "money",
          "percent",
          "integer",
          "decimal",
          "timeperiod",
          "select",
          "percent_change",
          "money_precise"
        ],
        "title": "Formatting"
      },
      "Frequency": {
        "type": "string",
        "enum": ["hourly", "daily"],
        "title": "Frequency"
      },
      "GlossaryResponseModel": {
        "properties": {
          "glossary": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ResultMetricWithGroup"
                },
                "type": "array"
              },
              {
                "items": {
                  "$ref": "#/components/schemas/ResultMetricWithLexiKeys"
                },
                "type": "array"
              },
              {
                "items": { "$ref": "#/components/schemas/ResultMetric" },
                "type": "array"
              }
            ],
            "title": "Glossary"
          }
        },
        "type": "object",
        "required": ["glossary"],
        "title": "GlossaryResponseModel"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": { "$ref": "#/components/schemas/ValidationError" },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "IAPRevenueModeOption": {
        "type": "string",
        "enum": [
          "GROSS_100",
          "GROSS_95",
          "GROSS_85",
          "GROSS_80",
          "GROSS_70",
          "GROSS_65",
          "GROSS_60"
        ],
        "title": "IAPRevenueModeOption"
      },
      "ImportCustomMappingRequest": {
        "properties": {
          "importer_id": { "type": "integer", "title": "Importer Id" }
        },
        "type": "object",
        "required": ["importer_id"],
        "title": "ImportCustomMappingRequest"
      },
      "ImportMetaDimensionRequest": {
        "properties": {
          "importer_id": { "type": "integer", "title": "Importer Id" }
        },
        "type": "object",
        "required": ["importer_id"],
        "title": "ImportMetaDimensionRequest"
      },
      "InternalFetchNetworkEntitiesModel": {
        "properties": {
          "data": {
            "additionalProperties": { "type": "object" },
            "type": "object",
            "title": "Data",
            "description": "Key should be a unique ID like row_id or attr_change_id to map results. Value is a dictionary with dimensions and IDs. If you want to get data you should provide dimension partner"
          },
          "adjust_account_id": {
            "type": "integer",
            "title": "Adjust Account Id"
          }
        },
        "type": "object",
        "required": ["data", "adjust_account_id"],
        "title": "InternalFetchNetworkEntitiesModel"
      },
      "Locale": {
        "type": "string",
        "enum": ["en", "zh", "ja", "ko", "vi", "ru", "pt", "es", "tr", "fr"],
        "title": "Locale"
      },
      "MetaDimensionImporterRequest": {
        "properties": {
          "csv_url": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Csv Url"
          },
          "csv_content": {
            "anyOf": [
              { "type": "string", "format": "binary" },
              { "type": "null" }
            ],
            "title": "Csv Content"
          },
          "dimension_column": { "type": "string", "title": "Dimension Column" },
          "source_dimension_column": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Source Dimension Column"
          },
          "regex_dimension_column": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Regex Dimension Column"
          },
          "source_second_dimension_column": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Source Second Dimension Column"
          },
          "regex_second_dimension_column": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Regex Second Dimension Column"
          },
          "source_third_dimension_column": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Source Third Dimension Column"
          },
          "regex_third_dimension_column": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Regex Third Dimension Column"
          },
          "start_date_column": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Start Date Column"
          },
          "meta_dimension_id": {
            "type": "integer",
            "title": "Meta Dimension Id"
          }
        },
        "type": "object",
        "required": ["dimension_column", "meta_dimension_id"],
        "title": "MetaDimensionImporterRequest"
      },
      "MetricConfig": {
        "properties": {
          "id": { "type": "string", "title": "Id" },
          "placeholder": { "type": "string", "title": "Placeholder" },
          "type": { "$ref": "#/components/schemas/NodeType" },
          "label": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Label"
          },
          "options": {
            "anyOf": [
              {
                "items": { "$ref": "#/components/schemas/MetricOption" },
                "type": "array"
              },
              { "type": "null" }
            ],
            "title": "Options"
          },
          "label_lexi_key": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Label Lexi Key"
          },
          "defaultValue": {
            "type": "string",
            "title": "Defaultvalue",
            "default": ""
          }
        },
        "type": "object",
        "required": ["id", "placeholder", "type"],
        "title": "MetricConfig"
      },
      "MetricOption": {
        "properties": {
          "label": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Label"
          },
          "slug": { "type": "string", "title": "Slug", "default": "" },
          "label_lexi_key": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Label Lexi Key"
          },
          "no_lexi_key": {
            "type": "boolean",
            "title": "No Lexi Key",
            "default": false
          }
        },
        "type": "object",
        "title": "MetricOption"
      },
      "MetricsTreeResponseModel": {
        "properties": {
          "metrics_tree": {
            "items": { "$ref": "#/components/schemas/SectionConfig" },
            "type": "array",
            "title": "Metrics Tree"
          }
        },
        "type": "object",
        "required": ["metrics_tree"],
        "title": "MetricsTreeResponseModel"
      },
      "NamedTargetingModel": {
        "properties": {
          "name": { "type": "string", "title": "Name" },
          "targeting": { "type": "object", "title": "Targeting" }
        },
        "type": "object",
        "required": ["name", "targeting"],
        "title": "NamedTargetingModel"
      },
      "NestedSectionConfig": {
        "properties": {
          "label": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Label"
          },
          "slug": { "type": "string", "title": "Slug", "default": "" },
          "label_lexi_key": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Label Lexi Key"
          },
          "type": {
            "allOf": [{ "$ref": "#/components/schemas/NodeType" }],
            "default": "constructor"
          },
          "children": {
            "items": { "$ref": "#/components/schemas/MetricConfig" },
            "type": "array",
            "title": "Children"
          },
          "template": { "type": "string", "title": "Template", "default": "" },
          "aliases": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Aliases"
          },
          "potential_options": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/PotentialOption"
                },
                "type": "object"
              },
              { "type": "null" }
            ],
            "title": "Potential Options"
          }
        },
        "type": "object",
        "title": "NestedSectionConfig"
      },
      "NodeType": {
        "type": "string",
        "enum": ["category", "select", "combobox", "constructor", "delimiter"],
        "title": "NodeType"
      },
      "OSName": {
        "type": "string",
        "enum": [
          "android",
          "android-tv",
          "apple-tv",
          "bada",
          "blackberry",
          "fire-tv",
          "ios",
          "linux",
          "macos",
          "nintendo",
          "playstation",
          "roku-os",
          "server",
          "smart-cast",
          "steamos",
          "symbian",
          "tizen",
          "unknown",
          "webos",
          "windows",
          "windows-phone",
          "xbox"
        ],
        "title": "OSName"
      },
      "PartnerSource": {
        "type": "string",
        "enum": ["manual", "ad_spend", "etl"],
        "title": "PartnerSource"
      },
      "PermissionType": {
        "type": "string",
        "enum": ["package", "adjust_feature", "automate_feature", "other"],
        "title": "PermissionType"
      },
      "PivotReportResponseModel": {
        "properties": {
          "rows": {
            "items": { "type": "object" },
            "type": "array",
            "title": "Rows",
            "default": []
          },
          "totals": { "type": "object", "title": "Totals", "default": {} },
          "data_warnings": {
            "items": {
              "additionalProperties": {
                "anyOf": [{ "type": "string" }, { "type": "null" }]
              },
              "type": "object"
            },
            "type": "array",
            "title": "Data Warnings",
            "default": []
          },
          "debug": {
            "anyOf": [
              { "$ref": "#/components/schemas/ReportDebugModel" },
              { "type": "null" }
            ]
          },
          "currencies": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Currencies",
            "default": []
          },
          "immature_cohorts": {
            "additionalProperties": {
              "items": { "type": "string" },
              "type": "array"
            },
            "type": "object",
            "title": "Immature Cohorts",
            "default": {}
          },
          "totals_per_dimension": {
            "type": "object",
            "title": "Totals Per Dimension",
            "default": {}
          }
        },
        "type": "object",
        "title": "PivotReportResponseModel"
      },
      "PotentialOption": {
        "properties": {
          "label": { "type": "string", "title": "Label" },
          "used_keys": {
            "additionalProperties": { "type": "string" },
            "type": "object",
            "title": "Used Keys"
          }
        },
        "type": "object",
        "required": ["label", "used_keys"],
        "title": "PotentialOption"
      },
      "ReportDebugModel": {
        "properties": {
          "service_urls": {
            "items": { "$ref": "#/components/schemas/RequestLogModel" },
            "type": "array",
            "title": "Service Urls"
          },
          "cached_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Cached At"
          }
        },
        "type": "object",
        "required": ["service_urls"],
        "title": "ReportDebugModel"
      },
      "ReportResponseModel": {
        "properties": {
          "rows": {
            "items": {
              "additionalProperties": {
                "anyOf": [
                  { "type": "string" },
                  { "type": "integer" },
                  { "type": "number" },
                  {
                    "additionalProperties": {
                      "anyOf": [
                        {
                          "additionalProperties": {
                            "items": { "type": "string" },
                            "type": "array"
                          },
                          "type": "object"
                        },
                        { "items": { "type": "string" }, "type": "array" },
                        { "type": "string" }
                      ]
                    },
                    "type": "object"
                  }
                ]
              },
              "type": "object"
            },
            "type": "array",
            "title": "Rows",
            "default": []
          },
          "totals": { "type": "object", "title": "Totals", "default": {} },
          "data_warnings": {
            "items": {
              "additionalProperties": {
                "anyOf": [{ "type": "string" }, { "type": "null" }]
              },
              "type": "object"
            },
            "type": "array",
            "title": "Data Warnings",
            "default": []
          },
          "debug": {
            "anyOf": [
              { "$ref": "#/components/schemas/ReportDebugModel" },
              { "type": "null" }
            ]
          },
          "currencies": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Currencies",
            "default": []
          },
          "immature_cohorts": {
            "additionalProperties": {
              "items": { "type": "string" },
              "type": "array"
            },
            "type": "object",
            "title": "Immature Cohorts",
            "default": {}
          }
        },
        "type": "object",
        "title": "ReportResponseModel"
      },
      "RequestLogModel": {
        "properties": {
          "method": { "type": "string", "title": "Method" },
          "url": { "type": "string", "title": "Url" },
          "params": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Params"
          },
          "data": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Data"
          },
          "status_code": { "type": "integer", "title": "Status Code" },
          "duration": { "type": "number", "title": "Duration" }
        },
        "type": "object",
        "required": ["method", "url", "status_code", "duration"],
        "title": "RequestLogModel"
      },
      "ResponsePartnerModel": {
        "properties": {
          "adjust_account_id": {
            "type": "integer",
            "title": "Adjust Account Id"
          },
          "slug": { "type": "string", "title": "Slug" },
          "label": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Label"
          },
          "source": {
            "items": { "$ref": "#/components/schemas/PartnerSource" },
            "type": "array",
            "title": "Source"
          }
        },
        "type": "object",
        "required": ["adjust_account_id", "slug", "source"],
        "title": "ResponsePartnerModel"
      },
      "ResultMetric": {
        "properties": {
          "id": { "type": "string", "title": "Id" },
          "name": { "type": "string", "title": "Name" },
          "short_name": {
            "type": "string",
            "title": "Short Name",
            "default": ""
          },
          "section": {
            "anyOf": [
              { "$ref": "#/components/schemas/Section" },
              { "type": "string" }
            ],
            "title": "Section",
            "default": ""
          },
          "formatting": {
            "anyOf": [
              { "$ref": "#/components/schemas/Formatting" },
              { "type": "null" }
            ]
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "increase_is_negative": {
            "type": "boolean",
            "title": "Increase Is Negative",
            "default": false
          },
          "type": { "type": "string", "title": "Type", "default": "" },
          "formula": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Formula"
          },
          "hidden": { "type": "boolean", "title": "Hidden", "default": false },
          "checking_frequency": {
            "allOf": [{ "$ref": "#/components/schemas/Frequency" }],
            "default": "hourly"
          },
          "glossary_section": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Glossary Section"
          }
        },
        "type": "object",
        "required": ["id", "name"],
        "title": "ResultMetric"
      },
      "ResultMetricWithGroup": {
        "properties": {
          "id": { "type": "string", "title": "Id" },
          "name": { "type": "string", "title": "Name" },
          "short_name": {
            "type": "string",
            "title": "Short Name",
            "default": ""
          },
          "section": {
            "anyOf": [
              { "$ref": "#/components/schemas/Section" },
              { "type": "string" }
            ],
            "title": "Section",
            "default": ""
          },
          "formatting": {
            "anyOf": [
              { "$ref": "#/components/schemas/Formatting" },
              { "type": "null" }
            ]
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "increase_is_negative": {
            "type": "boolean",
            "title": "Increase Is Negative",
            "default": false
          },
          "type": { "type": "string", "title": "Type", "default": "" },
          "formula": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Formula"
          },
          "hidden": { "type": "boolean", "title": "Hidden", "default": false },
          "checking_frequency": {
            "allOf": [{ "$ref": "#/components/schemas/Frequency" }],
            "default": "hourly"
          },
          "glossary_section": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Glossary Section"
          },
          "name_lexi_key": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name Lexi Key"
          },
          "short_name_lexi_key": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Short Name Lexi Key"
          },
          "description_lexi_key": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description Lexi Key"
          },
          "glossary_section_lexi_key": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Glossary Section Lexi Key"
          },
          "group": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Group"
          }
        },
        "type": "object",
        "required": ["id", "name"],
        "title": "ResultMetricWithGroup"
      },
      "ResultMetricWithLexiKeys": {
        "properties": {
          "id": { "type": "string", "title": "Id" },
          "name": { "type": "string", "title": "Name" },
          "short_name": {
            "type": "string",
            "title": "Short Name",
            "default": ""
          },
          "section": {
            "anyOf": [
              { "$ref": "#/components/schemas/Section" },
              { "type": "string" }
            ],
            "title": "Section",
            "default": ""
          },
          "formatting": {
            "anyOf": [
              { "$ref": "#/components/schemas/Formatting" },
              { "type": "null" }
            ]
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "increase_is_negative": {
            "type": "boolean",
            "title": "Increase Is Negative",
            "default": false
          },
          "type": { "type": "string", "title": "Type", "default": "" },
          "formula": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Formula"
          },
          "hidden": { "type": "boolean", "title": "Hidden", "default": false },
          "checking_frequency": {
            "allOf": [{ "$ref": "#/components/schemas/Frequency" }],
            "default": "hourly"
          },
          "glossary_section": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Glossary Section"
          },
          "name_lexi_key": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name Lexi Key"
          },
          "short_name_lexi_key": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Short Name Lexi Key"
          },
          "description_lexi_key": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description Lexi Key"
          },
          "glossary_section_lexi_key": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Glossary Section Lexi Key"
          }
        },
        "type": "object",
        "required": ["id", "name"],
        "title": "ResultMetricWithLexiKeys"
      },
      "Section": {
        "type": "string",
        "enum": [
          "Conversion",
          "Fraud",
          "Cost",
          "Revenue",
          "Retention",
          "Events",
          "6 Conversion Events (6 Bit)",
          "6 Direct Conversion Events (6 Bit)",
          "Installs",
          "Direct Installs",
          "Conversion Values",
          "Coarse Conversion Values",
          "Direct Conversion Values",
          "Partners",
          "Custom channels",
          "",
          "Apps Currencies",
          "Other Currencies",
          "mobile",
          "ctv",
          "gaming"
        ],
        "title": "Section"
      },
      "SectionConfig": {
        "properties": {
          "label": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Label"
          },
          "slug": { "type": "string", "title": "Slug", "default": "" },
          "label_lexi_key": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Label Lexi Key"
          },
          "type": {
            "allOf": [{ "$ref": "#/components/schemas/NodeType" }],
            "default": "category"
          },
          "children": {
            "items": {
              "anyOf": [
                { "$ref": "#/components/schemas/NestedSectionConfig" },
                { "$ref": "#/components/schemas/SectionConfig" },
                { "$ref": "#/components/schemas/Delimiter" }
              ]
            },
            "type": "array",
            "title": "Children"
          }
        },
        "type": "object",
        "title": "SectionConfig"
      },
      "SpecFilterOption": {
        "properties": {
          "id": { "type": "string", "title": "Id" },
          "name": { "type": "string", "title": "Name" },
          "short_name": {
            "type": "string",
            "title": "Short Name",
            "default": ""
          },
          "section": {
            "anyOf": [
              { "$ref": "#/components/schemas/Section" },
              { "type": "string" }
            ],
            "title": "Section",
            "default": ""
          },
          "formatting": {
            "anyOf": [
              { "$ref": "#/components/schemas/Formatting" },
              { "type": "null" }
            ]
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "increase_is_negative": {
            "type": "boolean",
            "title": "Increase Is Negative",
            "default": false
          },
          "extra": { "type": "object", "title": "Extra" }
        },
        "type": "object",
        "required": ["id", "name"],
        "title": "SpecFilterOption"
      },
      "SpecResponseModel": {
        "properties": {
          "dimensions": {
            "items": { "$ref": "#/components/schemas/DimensionSpec" },
            "type": "array",
            "title": "Dimensions"
          },
          "sort": { "type": "string", "title": "Sort" },
          "metrics": {
            "items": { "$ref": "#/components/schemas/SpecFilterOption" },
            "type": "array",
            "title": "Metrics"
          },
          "unsupported_metrics": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Unsupported Metrics"
          },
          "coloring_metrics": {
            "additionalProperties": { "type": "string" },
            "type": "object",
            "title": "Coloring Metrics"
          },
          "drilldown": {
            "anyOf": [
              { "$ref": "#/components/schemas/Drilldown" },
              { "type": "null" }
            ]
          },
          "data_warnings": {
            "items": {
              "additionalProperties": {
                "anyOf": [{ "type": "string" }, { "type": "null" }]
              },
              "type": "object"
            },
            "type": "array",
            "title": "Data Warnings"
          }
        },
        "type": "object",
        "required": ["dimensions", "sort", "metrics", "coloring_metrics"],
        "title": "SpecResponseModel"
      },
      "StoreType": {
        "type": "string",
        "enum": [
          "amazon",
          "android-tv",
          "app_catalog",
          "app_store",
          "app_world",
          "epic-games-store",
          "facebook",
          "fire-tv",
          "google_play",
          "huawei",
          "itunes",
          "lg",
          "microsoft_store",
          "microsoft-pc-store",
          "native-pc",
          "nintendo-store",
          "nokia_store",
          "playstation-store",
          "pure_os",
          "roku",
          "samsung_app_store",
          "steam-store",
          "vizio",
          "web",
          "windows-phone",
          "xbox-store"
        ],
        "title": "StoreType"
      },
      "ValidateMetricsRequest": {
        "properties": {
          "adjust_account_id": {
            "type": "integer",
            "title": "Adjust Account Id"
          },
          "metrics": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Metrics",
            "description": "List of metric slugs to validate"
          }
        },
        "type": "object",
        "required": ["adjust_account_id", "metrics"],
        "title": "ValidateMetricsRequest"
      },
      "ValidateMetricsResponse": {
        "properties": {
          "invalid_metrics": {
            "items": { "type": "string" },
            "type": "array",
            "uniqueItems": true,
            "title": "Invalid Metrics"
          },
          "warnings": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Warnings",
            "description": "List of warnings",
            "default": []
          }
        },
        "type": "object",
        "required": ["invalid_metrics"],
        "title": "ValidateMetricsResponse"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": { "anyOf": [{ "type": "string" }, { "type": "integer" }] },
            "type": "array",
            "title": "Location"
          },
          "msg": { "type": "string", "title": "Message" },
          "type": { "type": "string", "title": "Error Type" }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      },
      "VirtualPartner": {
        "properties": {
          "adjust_account_id": {
            "type": "integer",
            "title": "Adjust Account Id"
          },
          "slug": { "type": "string", "title": "Slug" },
          "source": { "$ref": "#/components/schemas/PartnerSource" },
          "label": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Label"
          }
        },
        "type": "object",
        "required": ["adjust_account_id", "slug", "source"],
        "title": "VirtualPartner"
      },
      "VirtualPartnersRequest": {
        "properties": {
          "partners": {
            "items": { "$ref": "#/components/schemas/VirtualPartner" },
            "type": "array",
            "minItems": 1,
            "title": "Partners"
          }
        },
        "type": "object",
        "required": ["partners"],
        "title": "VirtualPartnersRequest"
      }
    }
  }
}
